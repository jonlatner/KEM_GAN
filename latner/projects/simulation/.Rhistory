# load data ---------------------------------------------------------------
main_data <- vload(main_directory, "job_data")
main_data <- main_data[, .(person_id,
year,
firm_id,
age,
age_sq = age^2,
log_earnings)]
main_data <- get_akm_data(main_data) # this function applies some filters to the data for akm estimation
View(main_data)
# -------------------------------------------------------------------------------------------------------------------- #
# Copyright 2023 Stephen Tino                                                                                          #
#                                                                                                                      #
# This file is part of estimate_akm                                                                                    #
#                                                                                                                      #
# estimate_akm is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General    #
# Public License as published by the Free Software Foundation, either version 2.1 of the License, or (at your option)  #
# any later version.                                                                                                   #
#                                                                                                                      #
# estimate_akm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied   #
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more  #
# details.                                                                                                             #
#                                                                                                                      #
# You should have received a copy of the GNU Lesser General Public License along with estimate_akm. If not, see        #
# <https://www.gnu.org/licenses/>.                                                                                     #
# -------------------------------------------------------------------------------------------------------------------- #
rm(list = ls())
library("data.table")
library("dplyr")
library("ggm")
library("Matrix")
library("SparseM")
library("reshape2")
library("igraph")
library("zoo")
library("broom")
library("lfe")
main_directory <- "/Users/jonathanlatner/Google Drive/My Drive/IAB/D01700-LatnerWunder/akm/estimate_akm-main"
source(paste0(main_directory,"/public_use/code/utils/akm_functions.R"))
source(paste0(main_directory,"/public_use/code/utils/functions_1.R"))
# -------------------------------------------------------------------------
log_path <- file(paste0(main_directory,"/public_use/logs/2_estimate_akm.txt"), open = "wt")
log_open(log_path)
# load data ---------------------------------------------------------------
main_data <- vload(main_directory, "job_data")
main_data <- main_data[, .(person_id,
year,
firm_id,
age,
age_sq = age^2,
log_earnings)]
# -------------------------------------------------------------------------------------------------------------------- #
# Copyright 2023 Stephen Tino                                                                                          #
#                                                                                                                      #
# This file is part of estimate_akm                                                                                    #
#                                                                                                                      #
# estimate_akm is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General    #
# Public License as published by the Free Software Foundation, either version 2.1 of the License, or (at your option)  #
# any later version.                                                                                                   #
#                                                                                                                      #
# estimate_akm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied   #
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more  #
# details.                                                                                                             #
#                                                                                                                      #
# You should have received a copy of the GNU Lesser General Public License along with estimate_akm. If not, see        #
# <https://www.gnu.org/licenses/>.                                                                                     #
# -------------------------------------------------------------------------------------------------------------------- #
rm(list = ls())
options(crayon.enabled = FALSE)
library("data.table")
library("tidyr")
library("dplyr")
main_directory <- "/Users/jonathanlatner/Google Drive/My Drive/IAB/D01700-LatnerWunder/akm/estimate_akm-main"
source(paste0(main_directory,"/public_use/code/utils/akm_functions.R"))
source(paste0(main_directory,"/public_use/code/utils/functions_1.R"))
# -------------------------------------------------------------------------
log_path <- file(paste0(main_directory,"/public_use/logs/1_simulate_data.txt"), open = "wt")
log_open(log_path)
p_move <- 0.25 # probability of a worker switching firms from period t to t+1
set.seed(1992)
n_jobs <- 1E5
job_data <- data.table(person_id = 1:n_jobs,
birth_year = floor( runif(n_jobs, min = 1960, max = 1980) ),
firm_id1 = floor( abs( rnorm( n_jobs) )*1E2 ))
for(i in 2:19) {
job_data[, paste0("move",i) := as.integer( runif(n_jobs) < p_move ) ]
job_data[get(paste0("move",i))==1, paste0("firm_id",i) := floor( abs( rnorm( .N ) )*1E2 ) ]
job_data[get(paste0("move",i))==0, paste0("firm_id",i) := get(paste0("firm_id",i-1)) ]
}
job_data <- job_data %>%
select(-starts_with("move"))
job_data <- job_data %>%
pivot_longer(cols = starts_with("firm_id"),
names_to = "year",
values_to = "firm_id",
names_prefix = "firm_id") %>%
mutate(year = as.numeric(year)+2000)
n_firms <- max(job_data$firm_id)
# will now create earnings variables using an akm structure (person and firm effects will be recovered later)
job_data <- job_data %>%
select(person_id) %>%
distinct() %>%
mutate(person_effect = rnorm(n = n())*10) %>%
full_join(y = job_data, multiple= "all")
job_data <- job_data %>%
select(firm_id) %>%
distinct() %>%
mutate(firm_effect = rnorm(n = n())*5) %>%
full_join(y = job_data, multiple = "all")
job_data <- job_data %>%
select(year) %>%
distinct() %>%
mutate(year_effect = rnorm(n = n())*2) %>%
full_join(y = job_data, multiple = "all")
job_data <- job_data %>%
mutate(age = year - birth_year)
fe_data <- job_data %>%
select(person_id, firm_id, year, person_effect, firm_effect, year_effect)
job_data <- job_data %>%
mutate(log_earnings = firm_effect + person_effect + year_effect + 0.001*age - 0.002*age^2 + rnorm( n() ) ) %>%
select(-ends_with("effect")) %>%
as.data.table()
cat("\njob data for export:\n")
setkey(job_data, person_id, year)
glimpse(job_data)
saveRDS(job_data, file = paste0(main_directory, "/public_use/data/job_data.rds"))
saveRDS(fe_data, file = paste0(main_directory, "/public_use/data/fe_data.rds"))
log_close()
glimpse(job_data)
View(fe_data)
View(job_data)
# -------------------------------------------------------------------------------------------------------------------- #
# Copyright 2023 Stephen Tino                                                                                          #
#                                                                                                                      #
# This file is part of estimate_akm                                                                                    #
#                                                                                                                      #
# estimate_akm is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General    #
# Public License as published by the Free Software Foundation, either version 2.1 of the License, or (at your option)  #
# any later version.                                                                                                   #
#                                                                                                                      #
# estimate_akm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied   #
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more  #
# details.                                                                                                             #
#                                                                                                                      #
# You should have received a copy of the GNU Lesser General Public License along with estimate_akm. If not, see        #
# <https://www.gnu.org/licenses/>.                                                                                     #
# -------------------------------------------------------------------------------------------------------------------- #
rm(list = ls())
library("data.table")
library("dplyr")
library("ggm")
library("Matrix")
library("SparseM")
library("reshape2")
library("igraph")
library("zoo")
library("broom")
library("lfe")
main_directory <- "/Users/jonathanlatner/Google Drive/My Drive/IAB/D01700-LatnerWunder/akm/estimate_akm-main"
source(paste0(main_directory,"/public_use/code/utils/akm_functions.R"))
source(paste0(main_directory,"/public_use/code/utils/functions_1.R"))
log_path <- file(paste0(main_directory,"/public_use/logs/3_two_step_akm.txt"), open = "wt")
log_open(log_path)
# load data ---------------------------------------------------------------
main_data <- vload(main_directory, "job_data")
main_data <- main_data[, .(person_id,
year,
firm_id,
age,
age_sq = age^2,
log_earnings)]
View(main_data)
exp(-7.247)
exp(-1)
exp(1)
print(exp(1))
# -------------------------------------------------------------------------------------------------------------------- #
# Copyright 2023 Stephen Tino                                                                                          #
#                                                                                                                      #
# This file is part of estimate_akm                                                                                    #
#                                                                                                                      #
# estimate_akm is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General    #
# Public License as published by the Free Software Foundation, either version 2.1 of the License, or (at your option)  #
# any later version.                                                                                                   #
#                                                                                                                      #
# estimate_akm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied   #
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more  #
# details.                                                                                                             #
#                                                                                                                      #
# You should have received a copy of the GNU Lesser General Public License along with estimate_akm. If not, see        #
# <https://www.gnu.org/licenses/>.                                                                                     #
# -------------------------------------------------------------------------------------------------------------------- #
rm(list = ls())
library("data.table")
library("dplyr")
library("ggm")
library("Matrix")
library("SparseM")
library("reshape2")
library("igraph")
library("zoo")
library("broom")
library("lfe")
main_directory <- "/Users/jonathanlatner/Google Drive/My Drive/IAB/D01700-LatnerWunder/akm/estimate_akm-main"
source(paste0(main_directory,"/public_use/code/utils/akm_functions.R"))
source(paste0(main_directory,"/public_use/code/utils/functions_1.R"))
# -------------------------------------------------------------------------------------------------------------------- #
# Copyright 2023 Stephen Tino                                                                                          #
#                                                                                                                      #
# This file is part of estimate_akm                                                                                    #
#                                                                                                                      #
# estimate_akm is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General    #
# Public License as published by the Free Software Foundation, either version 2.1 of the License, or (at your option)  #
# any later version.                                                                                                   #
#                                                                                                                      #
# estimate_akm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied   #
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more  #
# details.                                                                                                             #
#                                                                                                                      #
# You should have received a copy of the GNU Lesser General Public License along with estimate_akm. If not, see        #
# <https://www.gnu.org/licenses/>.                                                                                     #
# -------------------------------------------------------------------------------------------------------------------- #
rm(list = ls())
library("data.table")
library("dplyr")
library("ggm")
library("Matrix")
library("SparseM")
library("reshape2")
library("igraph")
library("zoo")
library("broom")
library("lfe")
main_directory <- "/Users/jonathanlatner/Google Drive/My Drive/IAB/D01700-LatnerWunder/akm/estimate_akm-main"
source(paste0(main_directory,"/public_use/code/utils/akm_functions.R"))
source(paste0(main_directory,"/public_use/code/utils/functions_1.R"))
main_data <- vload(main_directory, "job_data")
View(main_data)
exp(-1)
exp(-7.247)
table(main_data$birth_year)
# -------------------------------------------------------------------------------------------------------------------- #
# Copyright 2023 Stephen Tino                                                                                          #
#                                                                                                                      #
# This file is part of estimate_akm                                                                                    #
#                                                                                                                      #
# estimate_akm is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General    #
# Public License as published by the Free Software Foundation, either version 2.1 of the License, or (at your option)  #
# any later version.                                                                                                   #
#                                                                                                                      #
# estimate_akm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied   #
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more  #
# details.                                                                                                             #
#                                                                                                                      #
# You should have received a copy of the GNU Lesser General Public License along with estimate_akm. If not, see        #
# <https://www.gnu.org/licenses/>.                                                                                     #
# -------------------------------------------------------------------------------------------------------------------- #
rm(list = ls())
library("data.table")
library("dplyr")
library("ggm")
library("Matrix")
library("SparseM")
library("reshape2")
library("igraph")
library("zoo")
library("broom")
library("lfe")
main_directory <- "/Users/jonathanlatner/Google Drive/My Drive/IAB/D01700-LatnerWunder/akm/estimate_akm-main"
source(paste0(main_directory,"/public_use/code/utils/akm_functions.R"))
source(paste0(main_directory,"/public_use/code/utils/functions_1.R"))
log_path <- file(paste0(main_directory,"/public_use/logs/3_two_step_akm.txt"), open = "wt")
log_open(log_path)
# load data ---------------------------------------------------------------
main_data <- vload(main_directory, "job_data")
main_data <- main_data[, .(person_id,
year,
firm_id,
age,
age_sq = age^2,
log_earnings)]
cat("\ndata before final data cleaning:\n")
glimpse(main_data)
main_data <- get_akm_data(main_data) # this function applies some filters to the data for akm estimation
# residualize log wages for two-way FE estimation -------------------------
# note: since age is perfectly colinear with birth year and the akm regression includes individual FE
# therefore I exclude the linear term of the quartic polynomial in age in the regression below
# this follows the literature (e.g. Dostie et al. 2021 and Li et al. 2023)
cat("\nbeginning residualization of log wage...")
est <- felm(log_earnings ~ age_sq | year, data = main_data)
main_data$resid <- est$residuals
rm(est)
cat("\n\nfinished residualizing log earnings. Data is ready for akm estimation.\n")
# estimate model and extract results --------------------------------------
cat("\n\n\nbeginning estimation of FE model....")
est <- felm(resid ~ 1 | person_id + firm_id, data = main_data)
cat("\n\n\n")
cat("estimation of FE model complete. Results:\n")
summary(est)
cat("\nExtracting FEs....")
fe <- getfe(est)
rm(est)
cat("\n\nExtraction of FE complete. Saving FEs...")
vsave(fe, main_directory, "two_step_est_fe_data")
cat("FEs saved.")
# variance decomposition --------------------------------------------------
fe <- as.data.table(fe)
main_data <- get_decomp_data(main_data, fe) # this function merges the FEs into the data with earnings
rm(fe)
results <- var_decomp(y = main_data$log_earnings,
worker_fe = main_data$worker_fe,
firm_fe = main_data$firm_fe)
results
View(results)
options(scipen = 9999) # disable scientific notation
View(results)
reticulate::repl_python()
# Load necessary library
library(dplyr)
# Set seed for reproducibility
set.seed(123)
# Number of observations
n <- 1000
# Define the 16 possible combinations of four binary variables
combinations <- expand.grid(y1 = c(0, 1), y2 = c(0, 1), y3 = c(0, 1), y4 = c(0, 1))
# Define c_16 and C_−16
c_16 <- combinations[16,]
C_minus_16 <- combinations[-16,]
# Initialize the dataset
D <- data.frame(matrix(ncol = 4, nrow = n))
colnames(D) <- c("y1", "y2", "y3", "y4")
# Sample the first 999 observations from C_minus_16 with equal probability
for (i in 1:(n-1)) {
sampled_row <- sample(1:15, 1)
D[i,] <- C_minus_16[sampled_row,]
}
# Set the 1000th observation to c_16
D[1000,] <- c_16
# Convert to data frame and print the first few rows
D <- as.data.frame(D)
head(D)
View(D)
df_frequency <- as.data.frame(table(D))
df_frequency$original <- (df_frequency$Freq / nrow(df_ods)) * 100
df_frequency <- as.data.frame(table(D))
df_frequency$original <- (df_frequency$Freq / nrow(D)) * 100
df_frequency
# Load the synthpop package
library(synthpop)
# Extract the arguments of the syn function
args(syn)
# Alternatively, use formals to get a list of the arguments with their default values
formals(syn)
# Alternatively, use formals to get a list of the arguments with their default values
test <- formals(syn)
# Load the synthpop and rpart packages
library(synthpop)
library(rpart)
# Check the documentation for the syn function in synthpop
?syn
# Inspect the source code of the syn function
getAnywhere("syn")
# Extract the default parameters of the rpart function
default_rpart_params <- formals(rpart)
print(default_rpart_params)
# Load the rpart package
library(rpart)
# Check the documentation for rpart
?rpart
# Extract the default parameters of the rpart function
default_rpart_params <- formals(rpart)
print(default_rpart_params)
# Specifically check the default value for cp
default_cp_value <- default_rpart_params$cp
print(default_cp_value)
print(default_rpart_params)
# Load the rpart package
library(rpart)
# Check the documentation for rpart
?rpart
# Extract the default parameters of the rpart function
default_rpart_params <- formals(rpart)
print(default_rpart_params)
# Specifically check the default value for cp
default_cp_value <- default_rpart_params$cp
print(default_cp_value)
library(rpart)
data(iris)
# Fit a simple rpart model
fit <- rpart(Species ~ ., data = iris)
# Print the complexity parameter used
print(fit$control$cp)
# Load the necessary package
library(synthpop)
# Check the documentation for the syn function
?syn
# Extract the default parameters of the syn function
default_syn_params <- formals(syn)
print(default_syn_params)
# Specifically check the default value for the parameter m
default_m_value <- default_syn_params$m
print(default_m_value)
# Run the syn function with minimal input
data(iris)
syn_result <- syn(iris)
# Inspect the default control parameters used in the syn function
print(syn_result$method)  # This shows the method used for synthesis
print(syn_result$m)       # This shows the default value for m
# Load the necessary packages
library(synthpop)
library(rpart)
# Check the documentation for the syn function
?syn
# Extract the default parameters of the syn function
default_syn_params <- formals(syn)
print(default_syn_params)
# Specifically check the default value for a parameter (e.g., m)
default_m_value <- default_syn_params$m
print(default_m_value)
# Use getAnywhere to inspect the syn function
getAnywhere("syn")
# Run the syn function with minimal input and method = "cart"
data(iris)
syn_result <- syn(iris, method = "cart")
# Inspect the control parameters used by rpart in the syn function
print(syn_result$model$Species$control$cp)
# Load the necessary packages
library(synthpop)
library(rpart)
# Check the documentation for the syn function
?syn
# Extract the default parameters of the syn function
default_syn_params <- formals(syn)
print(default_syn_params)
# Specifically check the default value for a parameter (e.g., m)
default_m_value <- default_syn_params$m
print(default_m_value)
# Use getAnywhere to inspect the syn function
getAnywhere("syn")
# Run the syn function with minimal input and method = "cart"
data(iris)
syn_result <- syn(iris, method = "cart")
# Inspect the control parameters used by rpart in the syn function
print(syn_result$model$Species$control$cp)
library(synthpop)
data(iris)
syn_result <- syn(iris, method = "cart")
# Inspect the control parameters used by rpart in the syn function
print(syn_result$models[[1]]$control$cp)
# Inspect the control parameters used by rpart in the syn function
print(syn_result$models[[1]])
# Inspect the control parameters used by rpart in the syn function
print(syn_result$models)
library(synthpop)
# Creating synthetic data to inspect the minbucket parameter
syn_data <- syn(data.frame(x = 1:100, y = rnorm(100)))
# Extracting the parameters used in the rpart model
control_params <- syn_data$method.params$rpart
control_params$minbucket
# Extracting the parameters used in the rpart model
control_params <- syn_data$method$rpart
# Extracting the parameters used in the rpart model
control_params <- syn_data$method
control_params
formals(syn.cart)
# Top commands ----
# Create empty R application (no figures, data frames, packages, etc.)
# Get a list of all loaded packages
packages <- search()[grepl("package:", search())]
# Unload each package
for (package in packages) {
unloadNamespace(package)
}
rm(list=ls(all=TRUE))
# load library
library(tidyverse)
library(ggh4x)
library(VGAM)
# FOLDERS - ADAPT THIS PATHWAY
main_dir = "/Users/jonathanlatner/Documents/GitHub/KEM_GAN/latner/projects/simulation/"
data_files = "data_files/"
original_data = "data_files/original/"
synthetic_data = "data_files/synthetic/"
graphs = "graphs/"
setwd(main_dir)
#functions
options(scipen=999)
df_compare <- read_csv(paste0(synthetic_data,"frequency_dp.csv"))
df_graph_sds <- df_compare %>%
filter(type == "synthetic") %>%
arrange(type,dp,n) %>%
mutate(dp = as.factor(dp))
df_graph_ods <- df_compare %>%
filter(type == "original") %>%
mutate(dp = as.factor(dp))
df_graph_ods <- unique(df_graph_ods)
df_graph <-
ggplot() +
geom_boxplot(position = position_dodge(width=0.9), aes(x = combine, y = value, fill = type), data = df_graph_sds, alpha = .2) +
geom_bar(data = df_graph_ods, aes(x = combine, y = value, fill = type), position = position_dodge(width=0.9), stat = "identity", alpha = .2) +
facet_grid(dp~unique, labeller = "label_both") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.title = element_blank(),
legend.key.width=unit(1, "cm"),
axis.text.x = element_text(angle = 25, hjust = 1, vjust = .5),
axis.title.x = element_blank(),
axis.line.y = element_line(color="black", linewidth=.5),
axis.line.x = element_line(color="black", linewidth=.5)
)
df_graph
