
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R ist freie Software und kommt OHNE JEGLICHE GARANTIE.
Sie sind eingeladen, es unter bestimmten Bedingungen weiter zu verbreiten.
Tippen Sie 'license()' or 'licence()' für Details dazu.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Tippen Sie 'demo()' für einige Demos, 'help()' für on-line Hilfe, oder
'help.start()' für eine HTML Browserschnittstelle zur Hilfe.
Tippen Sie 'q()', um R zu verlassen.

> # Top commands ----
> 
> # Create empty R application (no figures, data frames, packages, etc.)
> # Get a list of all loaded packages
> packages <- search()[grepl("package:", search())]
> # Unload each package
> for (package in packages) {
+   unloadNamespace(package)
+ }
> 
> rm(list=ls(all=TRUE))
> 
> # load library
> library(tidyverse)
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.2     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.0
✔ ggplot2   3.4.2     ✔ tibble    3.2.1
✔ lubridate 1.9.2     ✔ tidyr     1.3.0
✔ purrr     1.0.1     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(synthpop)
Find out more at https://www.synthpop.org.uk/
> library(ggh4x) # facet_nested
> 
> # FOLDERS - ADAPT THIS PATHWAY
> # main_dir = "N:/Ablagen/D01700-KEM/Latner/little_etal_2021/"
> main_dir = "/Users/jonathanlatner/Documents/GitHub/IAB/simulation_data/continuous_dim/"
> 
> data_files = "data_files/"
> original_data = "data_files/original/"
> synthetic_data = "data_files/synthetic/"
> graphs = "graphs/"
> tables = "tables/ctgan/"
> 
> setwd(main_dir)
> 
> # compare ----
> 
> df_specks <- data.frame(epochs = as.numeric(),
+                         rows = as.numeric(),
+                         cols = as.numeric(),
+                         batch = as.numeric(),
+                         specks = as.numeric())
> 
> rows = c("50000") # Rows/observations
> cols = c(10, 15, 20) # Columns/variables
> epochs = c(10, 20, 30, 40, 50, 75, 100)
> batch = c(500, 1000, 5000, "10000")
> 
> 
> for (r in rows) {
+   for (c in cols) {
+     for (e in epochs) {
+       for (b in batch) {
+         
+         print(paste(r, c, e, b, sep =","))
+         
+         #load original data
+         df_ods <- read.csv(paste0(original_data,"ods_rows_",r,"_cols_",c,".csv"))
+         
+         #load synds object
+         df_synds <- readRDS(paste0(data_files,"synthetic/synds_rows_",r,"_cols_",c,"_m_1.rds"))
+ 
+         #load synthetic data
+         sds <- read.csv(paste0(synthetic_data,"ctgan/sds_ctgan_rows_",r,"_cols_",c,"_n_1_epochs_",e,"_batch_",b,".csv"))
+ 
+         #replace synds object with synthetic data
+         df_synds$syn <- sds
+ 
+         #compare
+         utility_measure <- utility.gen(df_synds$syn, df_ods, print.stats = "SPECKS", nperms = 3)
+         
+         specks <- data.frame(epochs = e,
+                              rows = r,
+                              cols = c,
+                              batch = b,
+                              specks = as.numeric(utility_measure$SPECKS[1]))
+         df_specks <- rbind(df_specks,specks)
+       }
+     }
+   }
+ }
[1] "50000,10,10,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,10,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,10,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,10,10000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,20,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,20,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,20,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,20,10000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,30,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,30,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,30,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,30,10000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,40,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,40,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,40,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,40,10000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,50,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,50,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,50,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,50,10000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,75,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,75,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,75,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,75,10000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,100,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,100,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,100,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,10,100,10000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,10,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,10,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,10,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,10,10000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,20,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,20,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,20,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,20,10000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,30,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,30,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,30,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,30,10000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,40,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,40,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,40,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,40,10000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,50,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,50,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,50,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,50,10000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,75,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,75,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,75,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,75,10000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,100,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,100,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,100,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,15,100,10000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,10,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,10,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,10,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,10,10000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,20,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,20,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,20,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,20,10000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,30,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,30,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,30,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,30,10000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,40,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,40,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,40,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,40,10000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,50,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,50,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,50,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,50,10000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,75,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,75,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,75,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,75,10000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,100,500"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,100,1000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,100,5000"
Running 3 permutations to get NULL utilities.
synthesis [1] "50000,20,100,10000"
Running 3 permutations to get NULL utilities.
synthesis > 
> df_specks %>% arrange(batch, epochs)
   epochs  rows cols batch  specks
1      10 50000   10  1000 0.49564
2      10 50000   15  1000 0.40672
3      10 50000   20  1000 0.50922
4      20 50000   10  1000 0.37182
5      20 50000   15  1000 0.51298
6      20 50000   20  1000 0.52366
7      30 50000   10  1000 0.43280
8      30 50000   15  1000 0.44714
9      30 50000   20  1000 0.44928
10     40 50000   10  1000 0.30210
11     40 50000   15  1000 0.41736
12     40 50000   20  1000 0.47914
13     50 50000   10  1000 0.25486
14     50 50000   15  1000 0.33148
15     50 50000   20  1000 0.40100
16     75 50000   10  1000 0.31814
17     75 50000   15  1000 0.46386
18     75 50000   20  1000 0.42108
19    100 50000   10  1000 0.35314
20    100 50000   15  1000 0.53632
21    100 50000   20  1000 0.45676
22     10 50000   10 10000 0.54054
23     10 50000   15 10000 0.45578
24     10 50000   20 10000 0.56962
25     20 50000   10 10000 0.42172
26     20 50000   15 10000 0.57804
27     20 50000   20 10000 0.50560
28     30 50000   10 10000 0.38300
29     30 50000   15 10000 0.32238
30     30 50000   20 10000 0.57838
31     40 50000   10 10000 0.38292
32     40 50000   15 10000 0.35254
33     40 50000   20 10000 0.38684
34     50 50000   10 10000 0.39692
35     50 50000   15 10000 0.45528
36     50 50000   20 10000 0.46420
37     75 50000   10 10000 0.37420
38     75 50000   15 10000 0.43480
39     75 50000   20 10000 0.45772
40    100 50000   10 10000 0.36024
41    100 50000   15 10000 0.43838
42    100 50000   20 10000 0.49144
43     10 50000   10   500 0.43252
44     10 50000   15   500 0.44194
45     10 50000   20   500 0.53580
46     20 50000   10   500 0.33172
47     20 50000   15   500 0.46856
48     20 50000   20   500 0.52290
49     30 50000   10   500 0.32144
50     30 50000   15   500 0.33036
51     30 50000   20   500 0.45102
52     40 50000   10   500 0.33190
53     40 50000   15   500 0.31540
54     40 50000   20   500 0.39176
55     50 50000   10   500 0.33366
56     50 50000   15   500 0.42884
57     50 50000   20   500 0.42770
58     75 50000   10   500 0.34768
59     75 50000   15   500 0.43282
60     75 50000   20   500 0.55302
61    100 50000   10   500 0.42490
62    100 50000   15   500 0.47260
63    100 50000   20   500 0.51382
64     10 50000   10  5000 0.48410
65     10 50000   15  5000 0.43402
66     10 50000   20  5000 0.56760
67     20 50000   10  5000 0.36328
68     20 50000   15  5000 0.35104
69     20 50000   20  5000 0.40824
70     30 50000   10  5000 0.38032
71     30 50000   15  5000 0.52644
72     30 50000   20  5000 0.50724
73     40 50000   10  5000 0.42584
74     40 50000   15  5000 0.45580
75     40 50000   20  5000 0.45778
76     50 50000   10  5000 0.43242
77     50 50000   15  5000 0.36624
78     50 50000   20  5000 0.49620
79     75 50000   10  5000 0.45448
80     75 50000   15  5000 0.40182
81     75 50000   20  5000 0.49914
82    100 50000   10  5000 0.36022
83    100 50000   15  5000 0.42110
84    100 50000   20  5000 0.48452
> 
> write.csv(df_specks, paste0(tables,"utility_ctgan_specks_rows_50000.csv"), row.names=FALSE)
> 
>   
> 
> proc.time()
       User      System verstrichen 
   4591.020      42.110    6407.225 
