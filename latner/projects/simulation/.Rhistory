0.2 * policy_strength * gender +
rep(country_effects, each = n_individuals / n_countries) +
rep(time_effects, times = n_countries * (n_individuals / n_countries))
# Simulate the temporary employment binary outcome
temporary_employment <- rbinom(n_individuals, 1, plogis(temp_employment_prob))
# Create the data frame
data <- data.frame(
country = countries,
time_period = time_periods,
gender = gender,
policy_strength = policy_strength,
temporary_employment = temporary_employment
)
# View the structure of the dataset
summary(data)
# simulate the model ----
# Step 1: Fit individual-level models within each country
individual_models <- data %>%
group_by(country) %>%
do(model = glm(temporary_employment ~ gender, family = binomial, data = .))
# Extract coefficients and preserve the country identifier
individual_coefficients <- individual_models %>%
summarise(
country = first(country),  # Preserve the country identifier
gender_coef = coef(model)[2]  # Extract the gender coefficient
)
# Step 2: Create the policy_strength_by_country data frame
policy_strength_by_country <- data %>%
group_by(country) %>%
summarise(policy_strength = first(policy_strength))
# Step 3: Join the individual coefficients with the country-level policy_strength
individual_coefficients <- left_join(individual_coefficients, policy_strength_by_country, by = "country")
# Step 4: Aggregate the country-level coefficients using a linear model
model_twostep <- lm(gender_coef ~ policy_strength, data = individual_coefficients)
# step 5: Create the scatter plot
ggplot(individual_coefficients, aes(x = policy_strength, y = gender_coef)) +
geom_point(size = 3, color = "blue") +  # Scatter plot points
geom_smooth(method = "lm", se = FALSE, color = "red") +  # Regression line
labs(
title = "Effect of Policy on Gender Differences in Temporary Employment",
x = "Policy Strength",
y = "Gender Coefficient (Temporary Employment)"
) +
theme_minimal()
# hlm model ----
# Fit a hierarchical linear model (random intercepts for country and time period)
model_hlm <- glmer(temporary_employment ~ gender * policy_strength +
(1 | country),
family = binomial, data = data)
# Create a new data frame for predictions
# This data frame will contain different levels of policy_strength and gender
new_data <- expand.grid(
policy_strength = seq(min(data$policy_strength), max(data$policy_strength), length.out = 100),
gender = c(0, 1),  # 0 = female, 1 = male
education = mean(data$education)  # Keep other variables constant (e.g., average education)
)
# Predict temporary employment probabilities using the HLM model
new_data$predicted_temp_employment <- predict(model_hlm, newdata = new_data, type = "response", re.form = NA)
# Plot the predicted effect of policy strength on temporary employment by gender
ggplot(new_data, aes(x = policy_strength, y = predicted_temp_employment, color = as.factor(gender))) +
geom_line(size = 1.2) +
labs(
title = "Predicted Effect of Policy Strength on Temporary Employment by Gender",
x = "Policy Strength",
y = "Predicted Probability of Temporary Employment",
color = "Gender"
) +
scale_color_manual(values = c("0" = "blue", "1" = "red"), labels = c("Female", "Male")) +
theme_minimal()
# Summarize the results ----
summary(model_hlm)
summary(model_twostep)
rm(list = ls()) # clear the environment
# Load necessary libraries ----
library(dplyr)
library(ggplot2)
library(broom)
library(lme4)
# Set seed for reproducibility
set.seed(123)
options(scipen = 999)
# Simulate data ----
# Load required libraries
library(dplyr)
library(lme4)
# Set a seed for reproducibility
set.seed(123)
# Simulation parameters
n_individuals <- 1000  # Number of individuals
n_countries <- 10      # Number of countries
n_periods <- 10        # Number of time periods
# Create country and time period identifiers
countries <- factor(rep(1:n_countries, each = n_individuals / n_countries))
time_periods <- factor(rep(rep(1:n_periods, each = n_individuals / (n_countries * n_periods)), n_countries))
# Generate individual-level variables
gender <- rbinom(n_individuals, 1, 0.5)  # 1 = male, 0 = female
# Country-level variable
policy_strength <- rep(rnorm(n_countries, mean = 0, sd = 1), each = n_individuals / n_countries)
# Random effects for countries and time periods
country_effects <- rnorm(n_countries, mean = 0, sd = 1)
time_effects <- rnorm(n_periods, mean = 0, sd = 0.5)
# Simulate the interaction effect of policy_strength and gender on temporary employment
temp_employment_prob <- 0.1 +
0.5 * gender +
0.2 * policy_strength * gender +
rep(country_effects, each = n_individuals / n_countries) +
rep(time_effects, times = n_countries * (n_individuals / n_countries))
# Simulate the temporary employment binary outcome
temporary_employment <- rbinom(n_individuals, 1, plogis(temp_employment_prob))
# Create the data frame
data <- data.frame(
country = countries,
time_period = time_periods,
gender = gender,
policy_strength = policy_strength,
temporary_employment = temporary_employment
)
# View the structure of the dataset
summary(data)
# simulate the model ----
# Step 1: Fit individual-level models within each country
individual_models <- data %>%
group_by(country) %>%
do(model = glm(temporary_employment ~ gender, family = binomial, data = .))
# Extract coefficients and preserve the country identifier
individual_coefficients <- individual_models %>%
summarise(
country = first(country),  # Preserve the country identifier
gender_coef = coef(model)[2]  # Extract the gender coefficient
)
# Step 2: Create the policy_strength_by_country data frame
policy_strength_by_country <- data %>%
group_by(country) %>%
summarise(policy_strength = first(policy_strength))
# Step 3: Join the individual coefficients with the country-level policy_strength
individual_coefficients <- left_join(individual_coefficients, policy_strength_by_country, by = "country")
# Step 4: Aggregate the country-level coefficients using a linear model
model_twostep <- lm(gender_coef ~ policy_strength, data = individual_coefficients)
# step 5: Create the scatter plot
ggplot(individual_coefficients, aes(x = policy_strength, y = gender_coef)) +
geom_point(size = 3, color = "blue") +  # Scatter plot points
geom_smooth(method = "lm", se = FALSE, color = "red") +  # Regression line
labs(
title = "Effect of Policy on Gender Differences in Temporary Employment",
x = "Policy Strength",
y = "Gender Coefficient (Temporary Employment)"
) +
theme_minimal()
# hlm model ----
# Fit a hierarchical linear model (random intercepts for country and time period)
model_hlm <- glmer(temporary_employment ~ gender * policy_strength +
(1 | country),
family = binomial, data = data)
# Create a new data frame for predictions
# This data frame will contain different levels of policy_strength and gender
new_data <- expand.grid(
policy_strength = seq(min(data$policy_strength), max(data$policy_strength), length.out = 100),
gender = c(0, 1),  # 0 = female, 1 = male
education = mean(data$education)  # Keep other variables constant (e.g., average education)
)
# Predict temporary employment probabilities using the HLM model
new_data$predicted_temp_employment <- predict(model_hlm, newdata = new_data, type = "response", re.form = NA)
# Plot the predicted effect of policy strength on temporary employment by gender
ggplot(new_data, aes(x = policy_strength, y = predicted_temp_employment, color = as.factor(gender))) +
geom_line(size = 1.2) +
labs(
title = "Predicted Effect of Policy Strength on Temporary Employment by Gender",
x = "Policy Strength",
y = "Predicted Probability of Temporary Employment",
color = "Gender"
) +
scale_color_manual(values = c("0" = "blue", "1" = "red"), labels = c("Female", "Male")) +
theme_minimal()
# Summarize the results ----
summary(model_hlm)
summary(model_twostep)
rm(list = ls()) # clear the environment
# Load necessary libraries ----
library(dplyr)
library(ggplot2)
library(broom)
library(lme4)
# Set seed for reproducibility
set.seed(123)
options(scipen = 999)
# Simulate data ----
# Load required libraries
library(dplyr)
library(lme4)
# Set a seed for reproducibility
set.seed(123)
# Simulation parameters
n_individuals <- 1000  # Number of individuals
n_countries <- 10      # Number of countries
n_periods <- 10        # Number of time periods
# Create country and time period identifiers
countries <- factor(rep(1:n_countries, each = n_individuals / n_countries))
time_periods <- factor(rep(rep(1:n_periods, each = n_individuals / (n_countries * n_periods)), n_countries))
# Generate individual-level variables
gender <- rbinom(n_individuals, 1, 0.5)  # 1 = male, 0 = female
# Country-level variable
policy_strength <- rep(rnorm(n_countries, mean = 0, sd = 1), each = n_individuals / n_countries)
# Random effects for countries and time periods
country_effects <- rnorm(n_countries, mean = 0, sd = 1)
time_effects <- rnorm(n_periods, mean = 0, sd = 0.5)
# Simulate the interaction effect of policy_strength and gender on temporary employment
temp_employment_prob <- 0.1 + # 10% of population have temporary employment
0.5 * gender + # women are
0.2 * policy_strength * gender +
rep(country_effects, each = n_individuals / n_countries) +
rep(time_effects, times = n_countries * (n_individuals / n_countries))
# Simulate the temporary employment binary outcome
temporary_employment <- rbinom(n_individuals, 1, plogis(temp_employment_prob))
# Create the data frame
df_data <- data.frame(
country = countries,
time_period = time_periods,
gender = gender,
policy_strength = policy_strength,
temporary_employment = temporary_employment
)
# View the structure of the dataset
summary(df_data)
# simulate the model ----
# Step 1: Fit individual-level models within each country
individual_models <- df_data %>%
group_by(country) %>%
do(model = glm(temporary_employment ~ gender, family = binomial, data = .))
# Extract coefficients and preserve the country identifier
individual_coefficients <- individual_models %>%
summarise(
country = first(country),  # Preserve the country identifier
gender_coef = coef(model)[2]  # Extract the gender coefficient
)
# Step 2: Create the policy_strength_by_country data frame
policy_strength_by_country <- df_data %>%
group_by(country) %>%
summarise(policy_strength = first(policy_strength))
# Step 3: Join the individual coefficients with the country-level policy_strength
individual_coefficients <- left_join(individual_coefficients, policy_strength_by_country, by = "country")
# Step 4: Aggregate the country-level coefficients using a linear model
model_twostep <- lm(gender_coef ~ policy_strength, data = individual_coefficients)
# step 5: Create the scatter plot
ggplot(individual_coefficients, aes(x = policy_strength, y = gender_coef)) +
geom_point(size = 3, color = "blue") +  # Scatter plot points
geom_smooth(method = "lm", se = FALSE, color = "red") +  # Regression line
labs(
title = "Effect of Policy on Gender Differences in Temporary Employment",
x = "Policy Strength",
y = "Gender Coefficient (Temporary Employment)"
) +
theme_minimal()
# hlm model ----
# Fit a hierarchical linear model (random intercepts for country and time period)
model_hlm <- glmer(temporary_employment ~ gender * policy_strength +
(1 | country),
family = binomial, data = df_data)
# Create a new data frame for predictions
# This data frame will contain different levels of policy_strength and gender
df_data_new <- expand.grid(
policy_strength = seq(min(df_data$policy_strength), max(df_data$policy_strength), length.out = 100),
gender = c(0, 1),  # 0 = female, 1 = male
education = mean(df_data$education)  # Keep other variables constant (e.g., average education)
)
# Predict temporary employment probabilities using the HLM model
df_data_new$predicted_temp_employment <- predict(model_hlm, newdata = df_data_new, type = "response", re.form = NA)
# Plot the predicted effect of policy strength on temporary employment by gender
ggplot(df_data_new, aes(x = policy_strength, y = predicted_temp_employment, color = as.factor(gender))) +
geom_line(size = 1.2) +
labs(
title = "Predicted Effect of Policy Strength on Temporary Employment by Gender",
x = "Policy Strength",
y = "Predicted Probability of Temporary Employment",
color = "Gender"
) +
scale_color_manual(values = c("0" = "blue", "1" = "red"), labels = c("Female", "Male")) +
theme_minimal()
# Summarize the results ----
summary(model_hlm)
summary(model_twostep)
df_data %>%
group_by(gender) %>%
summarise(mean = mean(temporary_employment))
df_data %>%
summarise(mean = mean(temporary_employment))
View(df_data)
rm(list = ls()) # clear the environment
# Load necessary libraries ----
library(dplyr)
library(ggplot2)
library(broom)
library(lme4)
# Set seed for reproducibility
set.seed(123)
options(scipen = 999)
# Simulate data ----
# Load required libraries
library(dplyr)
library(lme4)
# Set a seed for reproducibility
set.seed(123)
# Simulation parameters
n_individuals <- 1000  # Number of individuals
n_countries <- 10      # Number of countries
n_periods <- 10        # Number of time periods
# Create country and time period identifiers
countries <- factor(rep(1:n_countries, each = n_individuals / n_countries))
time_periods <- factor(rep(rep(1:n_periods, each = n_individuals / (n_countries * n_periods)), n_countries))
# Generate individual-level variables
gender <- rbinom(n_individuals, 1, 0.5)  # 1 = male, 0 = female
# Country-level variable
policy_strength <- rep(rnorm(n_countries, mean = 0, sd = 1), each = n_individuals / n_countries)
# Random effects for countries and time periods
country_effects <- rnorm(n_countries, mean = 0, sd = 1)
time_effects <- rnorm(n_periods, mean = 0, sd = 0.5)
# Simulate the interaction effect of policy_strength and gender on temporary employment
# Base probability of temporary employment (log-odds for 10% probability)
base_prob <- 0.1
base_log_odds <- log(base_prob / (1 - base_prob))
# Effect of gender: Women (gender = 0) are 50% more likely to have temporary employment than men
gender_effect_female <- log(1.5)
# Simulate the interaction effect of policy_strength and gender on temporary employment
log_odds_temp_employment <- base_log_odds +
(gender == 0) * gender_effect_female +  # Women effect
0.2 * policy_strength +                 # Policy effect
rep(country_effects, each = n_individuals / n_countries)  # Country effects
# Simulate the temporary employment binary outcome
temporary_employment <- rbinom(n_individuals, 1, plogis(log_odds_temp_employment))
# Create the data frame
df_data <- data.frame(
country = countries,
time_period = time_periods,
gender = gender,
policy_strength = policy_strength,
temporary_employment = temporary_employment
)
# View the structure of the dataset
summary(df_data)
# simulate the model ----
# Step 1: Fit individual-level models within each country
individual_models <- df_data %>%
group_by(country) %>%
do(model = glm(temporary_employment ~ gender, family = binomial, data = .))
# Extract coefficients and preserve the country identifier
individual_coefficients <- individual_models %>%
summarise(
country = first(country),  # Preserve the country identifier
gender_coef = coef(model)[2]  # Extract the gender coefficient
)
# Step 2: Create the policy_strength_by_country data frame
policy_strength_by_country <- df_data %>%
group_by(country) %>%
summarise(policy_strength = first(policy_strength))
# Step 3: Join the individual coefficients with the country-level policy_strength
individual_coefficients <- left_join(individual_coefficients, policy_strength_by_country, by = "country")
# Step 4: Aggregate the country-level coefficients using a linear model
model_twostep <- lm(gender_coef ~ policy_strength, data = individual_coefficients)
# step 5: Create the scatter plot
ggplot(individual_coefficients, aes(x = policy_strength, y = gender_coef)) +
geom_point(size = 3, color = "blue") +  # Scatter plot points
geom_smooth(method = "lm", se = FALSE, color = "red") +  # Regression line
labs(
title = "Effect of Policy on Gender Differences in Temporary Employment",
x = "Policy Strength",
y = "Gender Coefficient (Temporary Employment)"
) +
theme_minimal()
# hlm model ----
# Fit a hierarchical linear model (random intercepts for country and time period)
model_hlm <- glmer(temporary_employment ~ gender * policy_strength +
(1 | country),
family = binomial, data = df_data)
# Create a new data frame for predictions
# This data frame will contain different levels of policy_strength and gender
df_data_new <- expand.grid(
policy_strength = seq(min(df_data$policy_strength), max(df_data$policy_strength), length.out = 100),
gender = c(0, 1),  # 0 = female, 1 = male
education = mean(df_data$education)  # Keep other variables constant (e.g., average education)
)
# Predict temporary employment probabilities using the HLM model
df_data_new$predicted_temp_employment <- predict(model_hlm, newdata = df_data_new, type = "response", re.form = NA)
# Plot the predicted effect of policy strength on temporary employment by gender
ggplot(df_data_new, aes(x = policy_strength, y = predicted_temp_employment, color = as.factor(gender))) +
geom_line(size = 1.2) +
labs(
title = "Predicted Effect of Policy Strength on Temporary Employment by Gender",
x = "Policy Strength",
y = "Predicted Probability of Temporary Employment",
color = "Gender"
) +
scale_color_manual(values = c("0" = "blue", "1" = "red"), labels = c("Female", "Male")) +
theme_minimal()
# Summarize the results ----
summary(model_hlm)
summary(model_twostep)
df_data %>%
group_by(gender) %>%
summarise(mean = mean(temporary_employment))
df_data %>%
summarise(mean = mean(temporary_employment))
rm(list = ls()) # clear the environment
# Load necessary libraries ----
library(tidyverse)
library(lme4)
# Set seed for reproducibility
set.seed(123)
options(scipen = 999)
# Simulate data ----
# Load required libraries
library(dplyr)
library(lme4)
# Set a seed for reproducibility
set.seed(123)
# Simulation parameters
n_individuals <- 1000  # Number of individuals
n_countries <- 10      # Number of countries
n_periods <- 10        # Number of time periods
# Create country and time period identifiers
countries <- factor(rep(1:n_countries, each = n_individuals / n_countries))
time_periods <- factor(rep(rep(1:n_periods, each = n_individuals / (n_countries * n_periods)), n_countries))
# Generate individual-level variables
gender <- rbinom(n_individuals, 1, 0.5)  # 1 = male, 0 = female
# Country-level variable
policy_strength <- rep(rnorm(n_countries, mean = 0, sd = 1), each = n_individuals / n_countries)
# Random effects for countries and time periods
country_effects <- rnorm(n_countries, mean = 0, sd = 1)
time_effects <- rnorm(n_periods, mean = 0, sd = 0.5)
# Simulate the interaction effect of policy_strength and gender on temporary employment
# Base probability of temporary employment (log-odds for 10% probability)
base_prob <- 0.1
base_log_odds <- log(base_prob / (1 - base_prob))
# Effect of gender: Women (gender = 0) are 50% more likely to have temporary employment than men
gender_effect_female <- log(1.5)
# Simulate the interaction effect of policy_strength and gender on temporary employment
log_odds_temp_employment <- base_log_odds +
(gender == 0) * gender_effect_female +  # Women effect
0.2 * policy_strength +                 # Policy effect
rep(country_effects, each = n_individuals / n_countries)  # Country effects
# Simulate the temporary employment binary outcome
temporary_employment <- rbinom(n_individuals, 1, plogis(log_odds_temp_employment))
# Create the data frame
df_data <- data.frame(
country = countries,
time_period = time_periods,
gender = gender,
policy_strength = policy_strength,
temporary_employment = temporary_employment
)
# View the structure of the dataset
summary(df_data)
# simulate the model ----
# Step 1: Fit individual-level models within each country
individual_models <- df_data %>%
group_by(country) %>%
do(model = glm(temporary_employment ~ gender, family = binomial, data = .))
# Extract coefficients and preserve the country identifier
individual_coefficients <- individual_models %>%
summarise(
country = first(country),  # Preserve the country identifier
gender_coef = coef(model)[2]  # Extract the gender coefficient
)
# Step 2: Create the policy_strength_by_country data frame
policy_strength_by_country <- df_data %>%
group_by(country) %>%
summarise(policy_strength = first(policy_strength))
# Step 3: Join the individual coefficients with the country-level policy_strength
individual_coefficients <- left_join(individual_coefficients, policy_strength_by_country, by = "country")
# Step 4: Aggregate the country-level coefficients using a linear model
model_twostep <- lm(gender_coef ~ policy_strength, data = individual_coefficients)
# step 5: Create the scatter plot
ggplot(individual_coefficients, aes(x = policy_strength, y = gender_coef)) +
geom_point(size = 3, color = "blue") +  # Scatter plot points
geom_smooth(method = "lm", se = FALSE, color = "red") +  # Regression line
labs(
title = "Effect of Policy on Gender Differences in Temporary Employment",
x = "Policy Strength",
y = "Gender Coefficient (Temporary Employment)"
) +
theme_minimal()
# hlm model ----
# Fit a hierarchical linear model (random intercepts for country and time period)
model_hlm <- glmer(temporary_employment ~ gender * policy_strength +
(1 | country),
family = binomial, data = df_data)
# Create a new data frame for predictions
# This data frame will contain different levels of policy_strength and gender
df_data_new <- expand.grid(
policy_strength = seq(min(df_data$policy_strength), max(df_data$policy_strength), length.out = 100),
gender = c(0, 1),  # 0 = female, 1 = male
education = mean(df_data$education)  # Keep other variables constant (e.g., average education)
)
# Predict temporary employment probabilities using the HLM model
df_data_new$predicted_temp_employment <- predict(model_hlm, newdata = df_data_new, type = "response", re.form = NA)
# Plot the predicted effect of policy strength on temporary employment by gender
ggplot(df_data_new, aes(x = policy_strength, y = predicted_temp_employment, color = as.factor(gender))) +
geom_line(size = 1.2) +
labs(
title = "Predicted Effect of Policy Strength on Temporary Employment by Gender",
x = "Policy Strength",
y = "Predicted Probability of Temporary Employment",
color = "Gender"
) +
scale_color_manual(values = c("0" = "blue", "1" = "red"), labels = c("Female", "Male")) +
theme_minimal()
# Summarize the results ----
summary(model_hlm)
summary(model_twostep)
df_data %>%
group_by(gender) %>%
summarise(mean = mean(temporary_employment))
df_data %>%
summarise(mean = mean(temporary_employment))
