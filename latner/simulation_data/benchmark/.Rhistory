pivot_longer(cols = starts_with(names(df_ods))) %>%
rename(pct = value) %>%
separate(name, into = c("variables", "value"), sep = "\\.\\.|\\.", remove = FALSE) %>%
mutate(contains_double_dot = if_else(str_detect(name, fixed("..")), 1, 0),
value_new = as.numeric(value),
value_new = as.character(if_else(contains_double_dot == 1, -1*value_new, value_new)),
value_new = if_else(is.na(value_new), value, value_new),
value_new = if_else(value_new == "miss", NA, value_new),
) %>%
select(-name,-contains_double_dot,-value) %>%
rename(value=value_new)
df_synthpop <- rbind(df_synthpop,df_compare)
}
}
df_synthpop$type <- "Synthpop"
# Graph ----
df_comparison <- rbind(df_ctgan, df_synthpop)
df_comparison
df_comparison$value <- factor(as.character(df_comparison$value), levels = str_sort(unique(df_comparison$value), numeric = TRUE))
df_graph <- ggplot(df_comparison, aes(x = value, y = pct, fill = data, color = type, group = data)) +
geom_bar(data = subset(df_comparison, data=="observed"), position = position_dodge(width = .9), stat = "identity") +
geom_line(data = subset(df_comparison, data!="observed")) +
facet_wrap( ~ variables, scales = "free", labeller = labeller(.rows = label_both)) +
xlab("") +
ylab("") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.key.width=unit(1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.line.y = element_line(color="black", linewidth=.5),
axis.line.x = element_line(color="black", linewidth=.5)
)
df_graph
df_graph <- ggplot(df_comparison, aes(x = value, y = pct, fill = data, color = data, group = data)) +
geom_bar(data = subset(df_comparison, data=="observed"), position = position_dodge(width = .9), stat = "identity") +
geom_line(data = subset(df_comparison, data!="observed")) +
facet_grid(type ~ variables, scales = "free", labeller = labeller(.rows = label_both)) +
xlab("") +
ylab("") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.key.width=unit(1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.line.y = element_line(color="black", linewidth=.5),
axis.line.x = element_line(color="black", linewidth=.5)
)
df_graph
df_synthpop
df_synthpop <- data.frame()
for (c in copies) {
for (d in data) {
df_ods <- read.csv(paste0(original_data,d,".csv"))
sds_list <- readRDS(paste0(data_files,"synthetic/synds_",d,"_m_",c,".rds"))
for (j in 1:c) {
sds <- read.csv(paste0(synthetic_data,"synthpop/sds_synthpop_",d,"_m_",c,"_n_",j,".csv"))
sds[sds == ""] <- NA
sds <- sds %>%
mutate_if(is.character, as.factor)
# sds_list$syn[[j]] <- sds  # use when m>1
sds_list$syn <- sds # use when m==1
}
df_temp <- compare(sds_list, df_ods)
df_compare <- data.frame(df_temp$tables) %>%
rownames_to_column(var = "data") %>%
pivot_longer(cols = starts_with(names(df_ods))) %>%
rename(pct = value) %>%
separate(name, into = c("variables", "value"), sep = "\\.\\.|\\.", remove = FALSE) %>%
mutate(contains_double_dot = if_else(str_detect(name, fixed("..")), 1, 0),
value_new = as.numeric(value),
value_new = as.character(if_else(contains_double_dot == 1, -1*value_new, value_new)),
value_new = if_else(is.na(value_new), value, value_new),
value_new = if_else(value_new == "miss", NA, value_new),
) %>%
select(-name,-contains_double_dot,-value) %>%
rename(value=value_new)
df_synthpop <- rbind(df_synthpop,df_compare)
}
}
df_temp <- compare(sds_list, df_ods)
df_temp
compare(sds_list, df_ods)
sds_list <- readRDS(paste0(data_files,"synthetic/synds_",d,"_m_",c,".rds"))
compare(sds_list, df_ods)
sds <- read.csv(paste0(synthetic_data,"synthpop/sds_synthpop_",d,"_m_",c,"_n_",j,".csv"))
sds[sds == ""] <- NA
sds <- sds %>%
mutate_if(is.character, as.factor)
# sds_list$syn[[j]] <- sds  # use when m>1
sds_list$syn <- sds # use when m==1
df_temp <- compare(sds_list, df_ods)
df_compare <- data.frame(df_temp$tables) %>%
rownames_to_column(var = "data") %>%
pivot_longer(cols = starts_with(names(df_ods))) %>%
rename(pct = value) %>%
separate(name, into = c("variables", "value"), sep = "\\.\\.|\\.", remove = FALSE) %>%
mutate(contains_double_dot = if_else(str_detect(name, fixed("..")), 1, 0),
value_new = as.numeric(value),
value_new = as.character(if_else(contains_double_dot == 1, -1*value_new, value_new)),
value_new = if_else(is.na(value_new), value, value_new),
value_new = if_else(value_new == "miss", NA, value_new),
) %>%
select(-name,-contains_double_dot,-value) %>%
rename(value=value_new)
df_temp
sds <- read.csv(paste0(synthetic_data,"synthpop/sds_synthpop_",d,"_m_",c,"_n_",j,".csv"))
# Top commands ----
# Create empty R application (no figures, data frames, packages, etc.)
# Get a list of all loaded packages
packages <- search()[grepl("package:", search())]
# Unload each package
for (package in packages) {
unloadNamespace(package)
}
rm(list=ls(all=TRUE))
# load library
library(synthpop)
# FOLDERS - ADAPT THIS PATHWAY
main_dir = "/Users/jonathanlatner/Documents/GitHub/KEM_GAN/latner/simulation_data/benchmark/"
data_files = "data_files/"
original_data = "data_files/original/"
synthetic_data = "data_files/synthetic/synthpop/"
duration = "duration/"
setwd(main_dir)
#functions
options(scipen=999)
# Create fake synthetic data with 1 copy (and time duration) ----
copies <- c(1)
data <- c("adult","grid","gridr","sd2011_small")
for (d in data) {
print(d)
df_ods <- read.csv(paste0(original_data,d,".csv"))
df_ods[df_ods == ""] <- NA
df_ods <- df_ods %>%
mutate_if(is.character, as.factor)
for (c in copies) {
# start clock
time_start <- proc.time()
df_synds <- syn(df_ods, m = c)
# end clock
time_end <- proc.time()
time_duration <- as.numeric(time_end[1] - time_start[1])
df_duration = data.frame(type="synthpop",
data=d,
duration=time_duration)
write.csv(df_duration, file = paste0(duration,"duration_synthpop_",d,".csv"), row.names = FALSE)
# save RDS file for future use with synthpop package (i.e. utility measures)
saveRDS(df_synds, paste0(data_files,"synthetic/synds_",d,"_m_",c,".rds"))
# save csv file
for (j in 1:c) {
synthpop_df <- df_synds$syn
write.csv(synthpop_df, file = paste0(synthetic_data,"sds_synthpop_",d,"_m_",c,"_n_",j,".csv"), row.names = FALSE)
}
}
}
# Top commands ----
# Create empty R application (no figures, data frames, packages, etc.)
# Get a list of all loaded packages
packages <- search()[grepl("package:", search())]
# Unload each package
for (package in packages) {
unloadNamespace(package)
}
rm(list=ls(all=TRUE))
# load library
library(tidyverse)
library(synthpop)
library(ggh4x) # facet_nested
# FOLDERS - ADAPT THIS PATHWAY
main_dir = "/Users/jonathanlatner/Documents/GitHub/KEM_GAN/latner/simulation_data/benchmark/"
data_files = "data_files/"
original_data = "data_files/original/"
synthetic_data = "data_files/synthetic/"
graphs = "graphs/"
setwd(main_dir)
# Load synthetic data from CTGAN (based on optimized paramterization) ----
data <- c("adult","grid","gridr","sd2011_small")
data <- c("sd2011_small")
copies = c(1)
epochs = c(50)
df_ctgan <- data.frame()
for (c in copies) {
for (d in data) {
df_ods <- read.csv(paste0(original_data,d,".csv"))
sds_list <- readRDS(paste0(data_files,"synthetic/synds_",d,"_m_",c,".rds"))
for (e in epochs) {
for (j in 1:c) {
sds <- read.csv(paste0(synthetic_data,"ctgan/sds_ctgan_data_",d,"_epochs_",e,"_m_",c,"_n_",j,".csv"))
sds[sds == ""] <- NA
sds <- sds %>%
mutate_if(is.character, as.factor)
# sds_list$syn[[j]] <- sds  # use when m>1
sds_list$syn <- sds # use when m==1
}
df_temp <- compare(sds_list, df_ods)
df_compare <- data.frame(df_temp$tables) %>%
rownames_to_column(var = "data") %>%
pivot_longer(cols = starts_with(names(df_ods))) %>%
rename(pct = value) %>%
separate(name, into = c("variables", "value"), sep = "\\.\\.|\\.", remove = FALSE) %>%
mutate(contains_double_dot = if_else(str_detect(name, fixed("..")), 1, 0),
value_new = as.numeric(value),
value_new = as.character(if_else(contains_double_dot == 1, -1*value_new, value_new)),
value_new = if_else(is.na(value_new), value, value_new),
value_new = if_else(value_new == "miss", NA, value_new),
) %>%
select(-name,-contains_double_dot,-value) %>%
rename(value=value_new)
df_ctgan <- rbind(df_ctgan,df_compare)
}
}
}
df_ctgan$type <- "CTGAN"
# Load synthetic data from Synthpop ----
data <- c("adult","grid","gridr","sd2011_small")
data <- c("sd2011_small")
copies = c(1)
df_synthpop <- data.frame()
for (c in copies) {
for (d in data) {
df_ods <- read.csv(paste0(original_data,d,".csv"))
sds_list <- readRDS(paste0(data_files,"synthetic/synds_",d,"_m_",c,".rds"))
for (j in 1:c) {
sds <- read.csv(paste0(synthetic_data,"synthpop/sds_synthpop_",d,"_m_",c,"_n_",j,".csv"))
sds[sds == ""] <- NA
sds <- sds %>%
mutate_if(is.character, as.factor)
# sds_list$syn[[j]] <- sds  # use when m>1
sds_list$syn <- sds # use when m==1
}
df_temp <- compare(sds_list, df_ods)
df_compare <- data.frame(df_temp$tables) %>%
rownames_to_column(var = "data") %>%
pivot_longer(cols = starts_with(names(df_ods))) %>%
rename(pct = value) %>%
separate(name, into = c("variables", "value"), sep = "\\.\\.|\\.", remove = FALSE) %>%
mutate(contains_double_dot = if_else(str_detect(name, fixed("..")), 1, 0),
value_new = as.numeric(value),
value_new = as.character(if_else(contains_double_dot == 1, -1*value_new, value_new)),
value_new = if_else(is.na(value_new), value, value_new),
value_new = if_else(value_new == "miss", NA, value_new),
) %>%
select(-name,-contains_double_dot,-value) %>%
rename(value=value_new)
df_synthpop <- rbind(df_synthpop,df_compare)
}
}
df_synthpop$type <- "Synthpop"
# Graph ----
df_comparison <- rbind(df_ctgan, df_synthpop)
df_comparison$value <- factor(as.character(df_comparison$value), levels = str_sort(unique(df_comparison$value), numeric = TRUE))
df_graph <- ggplot(df_comparison, aes(x = value, y = pct, fill = data, color = data, group = data)) +
geom_bar(data = subset(df_comparison, data=="observed"), position = position_dodge(width = .9), stat = "identity") +
geom_line(data = subset(df_comparison, data!="observed")) +
facet_grid(type ~ variables, scales = "free", labeller = labeller(.rows = label_both)) +
xlab("") +
ylab("") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.key.width=unit(1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.line.y = element_line(color="black", linewidth=.5),
axis.line.x = element_line(color="black", linewidth=.5)
)
df_graph
df_graph <- ggplot(df_comparison, aes(x = value, y = pct, fill = data, color = data, group = data)) +
geom_bar(data = subset(df_comparison, data=="observed"), position = position_dodge(width = .9), stat = "identity") +
geom_line(data = subset(df_comparison, data!="observed"), color = type) +
facet_grid( ~ variables, scales = "free", labeller = labeller(.rows = label_both)) +
xlab("") +
ylab("") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.key.width=unit(1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.line.y = element_line(color="black", linewidth=.5),
axis.line.x = element_line(color="black", linewidth=.5)
)
df_comparison <- rbind(df_ctgan, df_synthpop)
df_comparison$value <- factor(as.character(df_comparison$value), levels = str_sort(unique(df_comparison$value), numeric = TRUE))
df_graph <- ggplot(df_comparison, aes(x = value, y = pct, fill = data, color = data, group = data)) +
geom_bar(data = subset(df_comparison, data=="observed"), position = position_dodge(width = .9), stat = "identity") +
geom_line(data = subset(df_comparison, data!="observed"), color = type) +
facet_grid( ~ variables, scales = "free", labeller = labeller(.rows = label_both)) +
xlab("") +
ylab("") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.key.width=unit(1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.line.y = element_line(color="black", linewidth=.5),
axis.line.x = element_line(color="black", linewidth=.5)
)
df_graph <- ggplot(df_comparison, aes(x = value, y = pct, fill = data, color = type, group = data)) +
geom_bar(data = subset(df_comparison, data=="observed"), position = position_dodge(width = .9), stat = "identity") +
geom_line(data = subset(df_comparison, data!="observed")) +
facet_grid( ~ variables, scales = "free", labeller = labeller(.rows = label_both)) +
xlab("") +
ylab("") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.key.width=unit(1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.line.y = element_line(color="black", linewidth=.5),
axis.line.x = element_line(color="black", linewidth=.5)
)
df_graph
df_graph <- ggplot(df_comparison, aes(x = value, y = pct, fill = data, color = type, group = data)) +
# geom_bar(data = subset(df_comparison, data=="observed"), position = position_dodge(width = .9), stat = "identity") +
geom_line(data = subset(df_comparison, data!="observed")) +
facet_grid( ~ variables, scales = "free", labeller = labeller(.rows = label_both)) +
xlab("") +
ylab("") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.key.width=unit(1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.line.y = element_line(color="black", linewidth=.5),
axis.line.x = element_line(color="black", linewidth=.5)
)
df_graph
df_graph <- ggplot(df_comparison, aes(x = value, y = pct, fill = data, color = type, group = type)) +
# geom_bar(data = subset(df_comparison, data=="observed"), position = position_dodge(width = .9), stat = "identity") +
geom_line(data = subset(df_comparison, data!="observed")) +
facet_grid( ~ variables, scales = "free", labeller = labeller(.rows = label_both)) +
xlab("") +
ylab("") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.key.width=unit(1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.line.y = element_line(color="black", linewidth=.5),
axis.line.x = element_line(color="black", linewidth=.5)
)
df_graph
df_graph <- ggplot(df_comparison, aes(x = value, y = pct, fill = data, color = type, group = type)) +
geom_bar(data = subset(df_comparison, data=="observed"), position = position_dodge(width = .9), stat = "identity") +
geom_line(data = subset(df_comparison, data!="observed")) +
facet_grid( ~ variables, scales = "free", labeller = labeller(.rows = label_both)) +
xlab("") +
ylab("") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.key.width=unit(1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.line.y = element_line(color="black", linewidth=.5),
axis.line.x = element_line(color="black", linewidth=.5)
)
df_graph
df_graph <- ggplot(df_comparison, aes(x = value, y = pct, color = type, group = type)) +
geom_bar(data = subset(df_comparison, data=="observed"), position = position_dodge(width = .9), stat = "identity") +
geom_line(data = subset(df_comparison, data!="observed")) +
facet_grid( ~ variables, scales = "free", labeller = labeller(.rows = label_both)) +
xlab("") +
ylab("") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.key.width=unit(1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.line.y = element_line(color="black", linewidth=.5),
axis.line.x = element_line(color="black", linewidth=.5)
)
df_graph
df_graph <- ggplot(df_comparison, aes(x = value, y = pct, fill = data, color = type, group = type)) +
geom_bar(data = subset(df_comparison, data=="observed"), position = position_dodge(width = .9), stat = "identity") +
geom_line(data = subset(df_comparison, data!="observed")) +
facet_grid( ~ variables, scales = "free", labeller = labeller(.rows = label_both)) +
xlab("") +
ylab("") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.key.width=unit(1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.line.y = element_line(color="black", linewidth=.5),
axis.line.x = element_line(color="black", linewidth=.5)
)
df_graph
df_graph <- ggplot(df_comparison, aes(x = value, y = pct, fill = data, color = type, group = type)) +
# geom_bar(data = subset(df_comparison, data=="observed"), position = position_dodge(width = .9), stat = "identity") +
geom_line(data = subset(df_comparison, data!="observed")) +
facet_grid( ~ variables, scales = "free", labeller = labeller(.rows = label_both)) +
xlab("") +
ylab("") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.key.width=unit(1, "cm"),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.line.y = element_line(color="black", linewidth=.5),
axis.line.x = element_line(color="black", linewidth=.5)
)
df_graph
df_graph <- ggplot(df_comparison, aes(x = value, y = pct, fill = data, color = type, group = type)) +
# geom_bar(data = subset(df_comparison, data=="observed"), position = position_dodge(width = .9), stat = "identity") +
geom_line(data = subset(df_comparison, data!="observed")) +
facet_grid( ~ variables, scales = "free", labeller = labeller(.rows = label_both)) +
xlab("") +
ylab("") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.key.width=unit(1, "cm"),
axis.text.x = element_text(angle = 90, hjust = 1),
axis.line.y = element_line(color="black", linewidth=.5),
axis.line.x = element_line(color="black", linewidth=.5)
)
df_graph
df_comparison
with(df_comparison,table(type,data))
df_comparison_ods <- filter(df_comparison,data == "observed")
df_comparison_sds <- filter(df_comparison,data != "observed")
df_comparison_ods <- filter(df_comparison,data == "observed")
df_comparison_ods
df_comparison_ods <- filter(df_comparison,data == "observed") %>%
select(-type)
df_comparison_ods <- unique(df_comparison_ods)
df_comparison <- rbind(df_ctgan, df_synthpop)
df_comparison_ods <- filter(df_comparison,data == "observed") %>%
select(-type)
df_comparison_ods <- unique(df_comparison_ods)
df_comparison_ods$type = "observed"
df_comparison_sds <- filter(df_comparison,data != "observed")
df_comparison <- rbind(df_comparison_ods, df_comparison_sds)
df_graph <- ggplot(df_comparison, aes(x = value, y = pct, color = type, group = type)) +
geom_bar(data = subset(df_comparison, data=="observed"), position = position_dodge(width = .9), stat = "identity") +
geom_line(data = subset(df_comparison, data!="observed")) +
facet_grid( ~ variables, scales = "free", labeller = labeller(.rows = label_both)) +
xlab("") +
ylab("") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.key.width=unit(1, "cm"),
axis.text.x = element_text(angle = 90, hjust = 1),
axis.line.y = element_line(color="black", linewidth=.5),
axis.line.x = element_line(color="black", linewidth=.5)
)
df_graph
df_graph <- ggplot(df_comparison, aes(x = value, y = pct, fill = type, color = type, group = type)) +
geom_bar(data = subset(df_comparison, data=="observed"), position = position_dodge(width = .9), stat = "identity") +
geom_line(data = subset(df_comparison, data!="observed")) +
facet_grid( ~ variables, scales = "free", labeller = labeller(.rows = label_both)) +
xlab("") +
ylab("") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.key.width=unit(1, "cm"),
axis.text.x = element_text(angle = 90, hjust = 1),
axis.line.y = element_line(color="black", linewidth=.5),
axis.line.x = element_line(color="black", linewidth=.5)
)
df_graph
df_comparison$value <- factor(as.character(df_comparison$value), levels = str_sort(unique(df_comparison$value), numeric = TRUE))
df_graph <- ggplot(df_comparison, aes(x = value, y = pct, fill = type, color = type, group = type)) +
geom_bar(data = subset(df_comparison, data=="observed"), position = position_dodge(width = .9), stat = "identity") +
geom_line(data = subset(df_comparison, data!="observed")) +
facet_grid( ~ variables, scales = "free", labeller = labeller(.rows = label_both)) +
xlab("") +
ylab("") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.key.width=unit(1, "cm"),
axis.text.x = element_text(angle = 90, hjust = 1),
axis.line.y = element_line(color="black", linewidth=.5),
axis.line.x = element_line(color="black", linewidth=.5)
)
df_graph
df_graph <- ggplot(df_comparison, aes(x = value, y = pct, fill = type, color = type, group = type)) +
geom_bar(data = subset(df_comparison, data=="observed"), position = position_dodge(width = .9), stat = "identity", alpha = .2) +
geom_line(data = subset(df_comparison, data!="observed")) +
facet_grid( ~ variables, scales = "free", labeller = labeller(.rows = label_both)) +
xlab("") +
ylab("") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.key.width=unit(1, "cm"),
axis.text.x = element_text(angle = 90, hjust = 1),
axis.line.y = element_line(color="black", linewidth=.5),
axis.line.x = element_line(color="black", linewidth=.5)
)
df_graph
table(df_comparison$type)
df_comparison$type <- factor(df_comparison$type, levels = c("observed", "CTGAN", "Synthpop"))
table(df_comparison$type)
df_graph <- ggplot(df_comparison, aes(x = value, y = pct, fill = type, color = type, group = type)) +
geom_bar(data = subset(df_comparison, data=="observed"), position = position_dodge(width = .9), stat = "identity", alpha = .2) +
geom_line(data = subset(df_comparison, data!="observed")) +
facet_grid( ~ variables, scales = "free", labeller = labeller(.rows = label_both)) +
xlab("") +
ylab("") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.key.width=unit(1, "cm"),
axis.text.x = element_text(angle = 90, hjust = 1),
axis.line.y = element_line(color="black", linewidth=.5),
axis.line.x = element_line(color="black", linewidth=.5)
)
df_graph
