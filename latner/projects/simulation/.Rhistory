select(pid,period,wages,geo,male,age_gr,edu,insecurity,cluster)
# drop cluster variables for this simulation
df_data <- df_data %>%
select(-geo,-male,-age_gr,-edu)
# calculate the cross-sectional component ----
# we calculate it by taking the natural logarithm of the ratio
# between the median of the selected variable within the cluster (at time 0) and the individual's resource level at time 0.
# For example, if we treat the four streams you mentioned as individuals in the same cluster, the median would be calculated from the set (4, 8, 12, 16).
df_cross_sectional <- df_data %>%
group_by(cluster, pid) %>%
filter(row_number()==1) %>%
ungroup() %>%
group_by(cluster) %>%
summarise(median_wages = median(wages)) %>%
ungroup()
df_cross_sectional
# merge
df_data <- merge(df_data,df_cross_sectional,by = c("cluster")) %>%
group_by(pid) %>%
mutate(CSI = log(median_wages/wages)) %>%
ungroup()
df_data
# calculate longitudinal component ----
df_data <- df_data %>%
mutate(ln_wages = log(wages)) %>%
group_by(pid) %>%
mutate(diff = ifelse(row_number()>1, yes=-1*(ln_wages-lag(ln_wages)), no=0),
gains = ifelse(diff<0, yes = diff, no = 0),
losses = ifelse(diff>0, yes = diff, no = 0),
wage_losses_2 = -1*lag(losses,0)*(do^0),
wage_losses_3 = -1*lag(losses,1)*(do^1),
wage_losses_4 = -1*lag(losses,2)*(do^2),
wage_gains_2 = -1*lag(gains,0)*(do^0),
wage_gains_3 = -1*lag(gains,1)*(do^1),
wage_gains_4 = -1*lag(gains,2)*(do^2),
) %>%
ungroup() %>%
mutate(losses = rowSums(across(c(wage_losses_2, wage_losses_3, wage_losses_4)), na.rm = TRUE),
gains = rowSums(across(c(wage_gains_2, wage_gains_3, wage_gains_4)), na.rm = TRUE),
LI = losses*lo + gains*go
) %>%
select(-matches("losses_"), -matches("gains_"))
print(df_data)
# calculate weights (epsilon) ----
# Calculate variances within each insecurity category
df_data <- df_data %>%
group_by(insecurity) %>%
mutate(
var_LI = var(LI),
var_CSI = var(CSI),
) %>%
ungroup() %>%
mutate(sum_var_LI = sum(var_LI, na.rm = TRUE),
sum_var_CSI = sum(var_CSI, na.rm = TRUE),
epsilon = sum_var_CSI / (sum_var_CSI + sum_var_LI)
)
df_data
df_data
5.77^3
5.77^2
devtools::install_github("Gillian-Raab/synthpop",build_vignettes = TRUE)
library(credentials)
ssh_keygen()
library(gitcreds)
gitcreds_set()
devtools::install_github("Gillian-Raab/synthpop",build_vignettes = TRUE)
gitcreds_set()
5211c-0b4b6
gitcreds_set()
devtools::install_github("Gillian-Raab/synthpop",build_vignettes = TRUE)
Sys.setenv(GITHUB_PAT = "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")
devtools::install_github("Gillian-Raab/synthpop",build_vignettes = TRUE)
# Top commands ----
# Create empty R application (no figures, data frames, packages, etc.)
# Get a list of all loaded packages
packages <- search()[grepl("package:", search())]
# Unload each package
for (package in packages) {
unloadNamespace(package)
}
rm(list=ls(all=TRUE))
# load library
library(synthpop)
library(tidyverse)
library(xtable)
# https://arxiv.org/pdf/2406.16826
# FOLDERS - ADAPT THIS PATHWAY
main_dir = "/Users/jonathanlatner/Documents/GitHub/KEM_GAN/latner/projects/simulation/"
data_files = "data_files/"
original_data = "data_files/original/"
tables = "tables/"
setwd(main_dir)
#functions
options(scipen=999)
# Set seed for reproducibility
my.seed = 1237
# my.seed = 1240 # reproduces 3 observation
set.seed(my.seed)
# Load original data ----
df_ods <- read.csv(paste0(original_data,"simulated.csv"))
# Create synthetic data with numeric variables ----
# Identity disclosure measures ----
sds <- syn(df_ods, m = 1, seed = my.seed)
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE, to.print = "ident")
print(t1, plot = FALSE, to.print = "attrib")
replicated.uniques (sds, df_ods)
# Create 5 synthetic data sets ----
sds <- syn(df_ods, m = 5, seed = my.seed)
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE, to.print = "attrib")
print(t1, plot = FALSE)
sds <- syn(df_ods, m = 1, seed = my.seed)
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE, to.print = "ident")
print(t1, plot = FALSE, to.print = "attrib")
replicated.uniques (sds, df_ods)
print(t1, plot = FALSE, to.print = "attrib")
# Top commands ----
# Create empty R application (no figures, data frames, packages, etc.)
# Get a list of all loaded packages
packages <- search()[grepl("package:", search())]
# Unload each package
for (package in packages) {
unloadNamespace(package)
}
rm(list=ls(all=TRUE))
# load library
library(synthpop)
library(tidyverse)
library(xtable)
# https://arxiv.org/pdf/2406.16826
# FOLDERS - ADAPT THIS PATHWAY
main_dir = "/Users/jonathanlatner/Documents/GitHub/KEM_GAN/latner/projects/simulation/"
data_files = "data_files/"
original_data = "data_files/original/"
tables = "tables/"
setwd(main_dir)
#functions
options(scipen=999)
# Set seed for reproducibility
# my.seed = 1237
my.seed = 1240 # reproduces 3 observation
set.seed(my.seed)
# Load original data ----
df_ods <- read.csv(paste0(original_data,"simulated.csv"))
# Create synthetic data with numeric variables ----
# Identity disclosure measures ----
sds <- syn(df_ods, m = 1, seed = my.seed)
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE, to.print = "ident")
print(t1, plot = FALSE, to.print = "attrib")
# Top commands ----
# Create empty R application (no figures, data frames, packages, etc.)
# Get a list of all loaded packages
packages <- search()[grepl("package:", search())]
# Unload each package
for (package in packages) {
unloadNamespace(package)
}
rm(list=ls(all=TRUE))
# load library
library(synthpop)
library(tidyverse)
library(xtable)
# https://arxiv.org/pdf/2406.16826
# FOLDERS - ADAPT THIS PATHWAY
main_dir = "/Users/jonathanlatner/Documents/GitHub/KEM_GAN/latner/projects/simulation/"
data_files = "data_files/"
original_data = "data_files/original/"
tables = "tables/"
setwd(main_dir)
#functions
options(scipen=999)
# Set seed for reproducibility
my.seed = 1237
# my.seed = 1240 # reproduces 3 observation
set.seed(my.seed)
# Load original data ----
df_ods <- read.csv(paste0(original_data,"simulated.csv"))
# Create synthetic data with numeric variables ----
# Identity disclosure measures ----
sds <- syn(df_ods, m = 1, seed = my.seed)
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE, to.print = "ident")
print(t1, plot = FALSE, to.print = "attrib")
replicated.uniques (sds, df_ods)
# Create 5 synthetic data sets ----
sds <- syn(df_ods, m = 5, seed = my.seed)
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE)
print(t1, plot = FALSE)
sds <- syn(df_ods, m = 1, seed = my.seed)
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE, to.print = "attrib")
sds <- syn(df_ods, m = 1, seed = my.seed+1)
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE, to.print = "attrib")
df_sds <- data.frame(sds$syn[5])
df_sds <- data.frame(sds$syn[1])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
df_sds <- data.frame(sds$syn)
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
sds <- syn(df_ods, m = 1, seed = my.seed+1)
df_sds <- data.frame(sds$syn)
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
sds <- syn(df_ods, m = 1, seed = my.seed+2)
df_sds <- data.frame(sds$syn)
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE, to.print = "attrib")
sds <- syn(df_ods, m = 1, seed = my.seed)
df_sds <- data.frame(sds$syn)
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE, to.print = "attrib")
sds <- syn(df_ods, m = 1, seed = my.seed+2)
df_sds <- data.frame(sds$syn)
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE, to.print = "attrib")
sds <- syn(df_ods, m = 1, seed = my.seed+1)
df_sds <- data.frame(sds$syn)
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE, to.print = "attrib")
View(t1)
t1$output.list$var4$attrib
sds <- syn(df_ods, m = 5, seed = my.seed)
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE, to.print = "attrib")
t1$output.list$var4$attrib
6.6/5
df_sds <- data.frame(sds$syn[1])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
df_sds <- data.frame(sds$syn[5])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
df_sds <- data.frame(sds$syn[4])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
df_sds <- data.frame(sds$syn[3])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
df_sds <- data.frame(sds$syn[2])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
df_sds <- data.frame(sds$syn[5])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE, to.print = "attrib")
t1$output.list$var4$attrib
print(t1, plot = FALSE, to.print = "attrib")
sds <- syn(df_ods, m = 5, seed = my.seed)
print(t1, plot = FALSE, to.print = "attrib")
t1$output.list$var4$attrib
print(t1, plot = FALSE)
df_sds <- data.frame(sds$syn[5])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
df_sds <- data.frame(sds$syn[4])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE)
print(t1, plot = FALSE, to.print = "attrib")
t1$output.list$var4$attrib
my.seed = 1237
sds <- syn(df_ods, m = 5, seed = my.seed)
t1$output.list$var4$attrib
print(t1, plot = FALSE, to.print = "attrib")
t1$output.list$var4$attrib
my.seed = 1240 # reproduces 3 observation
sds <- syn(df_ods, m = 5, seed = my.seed)
df_sds <- data.frame(sds$syn[4])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE)
print(t1, plot = FALSE, to.print = "attrib")
t1$output.list$var4$attrib
sds <- syn(df_ods, m = 5, seed = my.seed)
df_sds <- data.frame(sds$syn[1])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
df_sds <- data.frame(sds$syn[2])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
df_sds <- data.frame(sds$syn[3])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
df_sds <- data.frame(sds$syn[4])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
df_sds <- data.frame(sds$syn[5])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
6.5/5
print(t1, plot = FALSE, to.print = "attrib")
t1$output.list$var4$attrib
6.6/5
5.8/5
6.7/5
my.seed = 1237
# my.seed = 1240 # reproduces 3 observation
sds <- syn(df_ods, m = 5, seed = my.seed)
df_sds <- data.frame(sds$syn[5])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE)
print(t1, plot = FALSE, to.print = "attrib")
t1$output.list$var4$attrib
sds <- syn(df_ods, m = 5, seed = my.seed)
df_sds <- data.frame(sds$syn[5])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
print(t1, plot = FALSE)
replicated.uniques (sds, df_ods)
replicated.uniques(sds, df_ods)
0.1+0.1+0.1
0.3/5
df_sds <- data.frame(sds$syn[2])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
my.seed = 1237
# my.seed = 1240 # reproduces 3 observation
sds <- syn(df_ods, m = 5, seed = my.seed)
df_sds <- data.frame(sds$syn[2])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE)
print(t1, plot = FALSE, to.print = "attrib")
t1$output.list$var4$attrib
replicated.uniques(sds, df_ods)
df_sds <- data.frame(sds$syn[2])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
df_sds <- data.frame(sds$syn[1])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
df_sds <- data.frame(sds$syn[2])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
df_sds <- data.frame(sds$syn[3])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
df_sds <- data.frame(sds$syn[4])
df_sds$combine <- paste(df_sds$var1, df_sds$var2, df_sds$var3, df_sds$var4, sep = "")
df_sds <- df_sds %>%
select(-matches("var"))
df_sds_frequency <- as.data.frame(table(df_sds))
df_sds_frequency
3/5000
# Top commands ----
# Create empty R application (no figures, data frames, packages, etc.)
# Get a list of all loaded packages
packages <- search()[grepl("package:", search())]
# Unload each package
for (package in packages) {
unloadNamespace(package)
}
rm(list=ls(all=TRUE))
# load library
library(synthpop)
library(tidyverse)
library(xtable)
# https://arxiv.org/pdf/2406.16826
# FOLDERS - ADAPT THIS PATHWAY
main_dir = "/Users/jonathanlatner/Documents/GitHub/KEM_GAN/latner/projects/simulation/"
data_files = "data_files/"
original_data = "data_files/original/"
tables = "tables/"
setwd(main_dir)
#functions
options(scipen=999)
# Set seed for reproducibility
my.seed = 1237
# my.seed = 1240 # reproduces 3 observation
set.seed(my.seed)
# Load original data ----
df_ods <- read.csv(paste0(original_data,"simulated.csv"))
# Create synthetic data with numeric variables ----
# Identity disclosure measures ----
sds <- syn(df_ods, m = 1, seed = my.seed)
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE, to.print = "ident")
print(t1, plot = FALSE, to.print = "attrib")
replicated.uniques (sds, df_ods)
sds <- syn(df_ods, m = 10, seed = my.seed+1)
my.seed = 1237
# my.seed = 1240 # reproduces 3 observation
sds <- syn(df_ods, m = 10, seed = my.seed)
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE)
print(t1, plot = FALSE, to.print = "attrib")
# my.seed = 1240 # reproduces 3 observation
sds <- syn(df_ods, m = 20, seed = my.seed)
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE)
print(t1, plot = FALSE, to.print = "attrib")
t1$output.list$var4$attrib
replicated.uniques(sds, df_ods)
my.seed = 1237
# my.seed = 1240 # reproduces 3 observation
sds <- syn(df_ods, m = 5, seed = my.seed)
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE, to.print = "attrib")
print(t1, plot = FALSE)
t1$output.list$var4$attrib
sds <- syn(df_ods, m = 1, seed = my.seed)
t1 <- disclosure.summary(sds, df_ods, print.flag = FALSE, plot = TRUE, keys = c("var1", "var2", "var3"), target = "var4")
print(t1, plot = FALSE, to.print = "ident")
print(t1, plot = FALSE, to.print = "attrib")
replicated.uniques (sds, df_ods)
