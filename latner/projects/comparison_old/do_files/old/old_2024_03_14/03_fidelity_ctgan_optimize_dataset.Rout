
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R ist freie Software und kommt OHNE JEGLICHE GARANTIE.
Sie sind eingeladen, es unter bestimmten Bedingungen weiter zu verbreiten.
Tippen Sie 'license()' or 'licence()' für Details dazu.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Tippen Sie 'demo()' für einige Demos, 'help()' für on-line Hilfe, oder
'help.start()' für eine HTML Browserschnittstelle zur Hilfe.
Tippen Sie 'q()', um R zu verlassen.

> # Top commands ----
> 
> # Create empty R application (no figures, data frames, packages, etc.)
> # Get a list of all loaded packages
> packages <- search()[grepl("package:", search())]
> # Unload each package
> for (package in packages) {
+   unloadNamespace(package)
+ }
> 
> rm(list=ls(all=TRUE))
> 
> # load library
> library(tidyverse)
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.2     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.0
✔ ggplot2   3.4.2     ✔ tibble    3.2.1
✔ lubridate 1.9.2     ✔ tidyr     1.3.0
✔ purrr     1.0.1     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(synthpop)
Find out more at https://www.synthpop.org.uk/
> library(ggh4x) # facet_nested
> 
> # FOLDERS - ADAPT THIS PATHWAY
> main_dir = "/Users/jonathanlatner/Documents/GitHub/KEM_GAN/latner/projects/comparison/"
> 
> data_files = "data_files/"
> original_data = "data_files/original/"
> synthetic_data = "data_files/synthetic/ctgan/"
> graphs = "graphs/ctgan/"
> tables = "tables/ctgan/"
> 
> setwd(main_dir)
> 
> # Load original data ----
> 
> epochs = c(100,300,600,900)
> data <- c("sd2011","sd2011_clean","sd2011_clean_small","sd2011_clean_small_categorical")
> 
> df_comparison_single <- data.frame()
> df_fidelity_plot <- data.frame()
> copies = c(5)
> df_comparison_multiple <- data.frame()
> for (c in copies) {
+   for (d in data) {
+     df_ods <- read.csv(paste0(original_data,d,".csv"))
+     sds_list <- readRDS(paste0(data_files,"synthetic/synds_",d,"_m_",c,".rds"))
+     for (e in epochs) {
+       for (j in 1:c) {
+         sds <- read.csv(paste0(synthetic_data,"sds_ctgan_data_",d,"_epochs_",e,"_m_",c,"_n_",j,".csv"))
+         sds[sds == ""] <- NA
+         sds <- sds %>%
+           mutate_if(is.character, as.factor)
+         sds_list$syn[[j]] <- sds  # use when m>1
+         # sds_list$syn <- sds # use when m==1
+       }
+       
+       utility <- utility.tables(sds_list, df_ods, tables = "twoway")
+       utility_plot <- data.frame(utility$utility.plot$data)
+       utility_plot$copies <- c
+       utility_plot$epochs <- e
+       utility_plot$data <- d
+       df_fidelity_plot <- rbind(df_fidelity_plot,utility_plot)
+ 
+       utility_measure <- utility.gen(sds_list$syn, df_ods, print.stats = "all", nperms = 3)
+       output <- data.frame(data = d,
+                            copies = c,
+                            epochs = as.character(e),
+                            pmse = as.numeric(mean(utility_measure$pMSE)),
+                            specks = as.numeric(mean(utility_measure$SPECKS)))
+       df_comparison_multiple <- rbind(df_comparison_multiple,output)
+     }
+   }
+ }
Running 3 permutations to get NULL utilities.
synthesis 
synthesis 
synthesis 
synthesis 
synthesis Running 3 permutations to get NULL utilities.
synthesis 
synthesis 
synthesis 
synthesis 
synthesis Running 3 permutations to get NULL utilities.
synthesis 
synthesis 
synthesis 
synthesis 
synthesis Running 3 permutations to get NULL utilities.
synthesis 
synthesis 
synthesis 
synthesis 
synthesis Running 3 permutations to get NULL utilities.
synthesis 
synthesis 
synthesis 
synthesis 
synthesis Running 3 permutations to get NULL utilities.
synthesis 
synthesis 
synthesis 
synthesis 
synthesis Running 3 permutations to get NULL utilities.
synthesis 
synthesis 
synthesis 
synthesis 
synthesis Running 3 permutations to get NULL utilities.
synthesis 
synthesis 
synthesis 
synthesis 
synthesis Running 3 permutations to get NULL utilities.
synthesis 
synthesis 
synthesis 
synthesis 
synthesis Running 3 permutations to get NULL utilities.
synthesis 
synthesis 
synthesis 
synthesis 
synthesis Running 3 permutations to get NULL utilities.
synthesis 
synthesis 
synthesis 
synthesis 
synthesis Running 3 permutations to get NULL utilities.
synthesis 
synthesis 
synthesis 
synthesis 
synthesis Running 3 permutations to get NULL utilities.
synthesis 
synthesis 
synthesis 
synthesis 
synthesis Running 3 permutations to get NULL utilities.
synthesis 
synthesis 
synthesis 
synthesis 
synthesis Running 3 permutations to get NULL utilities.
synthesis 
synthesis 
synthesis 
synthesis 
synthesis Running 3 permutations to get NULL utilities.
synthesis 
synthesis 
synthesis 
synthesis 
synthesis > 
> df_comparison <- rbind(df_comparison_single,df_comparison_multiple)%>% 
+   arrange(data,copies,epochs)
> 
> write.csv(df_comparison, paste0(tables,"ctgan_fidelity_optimize_dataset.csv"), row.names=FALSE)
> write.csv(df_fidelity_plot, paste0(tables,"ctgan_fidelity_twoway_dataset.csv"), row.names=FALSE)
> 
> # Graph ----
> 
> df_comparison <- read.csv(paste0(tables,"ctgan_fidelity_optimize_dataset.csv"))
> df_comparison$epochs <- factor(as.character(df_comparison$epochs), levels = str_sort(unique(df_comparison$epochs), numeric = TRUE))
> 
> 
> df_comparison <- df_comparison %>%
+   filter(copies == 5) %>%
+   pivot_longer(!c(data,copies,epochs), names_to = "utility", values_to = "values")
> 
> df_comparison %>% arrange(utility,data,epochs) %>% print(n=30)
# A tibble: 32 × 5
   data                           copies epochs utility values
   <chr>                           <int> <fct>  <chr>    <dbl>
 1 sd2011                              5 100    pmse     0.198
 2 sd2011                              5 300    pmse     0.172
 3 sd2011                              5 600    pmse     0.160
 4 sd2011                              5 900    pmse     0.152
 5 sd2011_clean                        5 100    pmse     0.213
 6 sd2011_clean                        5 300    pmse     0.169
 7 sd2011_clean                        5 600    pmse     0.151
 8 sd2011_clean                        5 900    pmse     0.157
 9 sd2011_clean_small                  5 100    pmse     0.195
10 sd2011_clean_small                  5 300    pmse     0.164
11 sd2011_clean_small                  5 600    pmse     0.145
12 sd2011_clean_small                  5 900    pmse     0.133
13 sd2011_clean_small_categorical      5 100    pmse     0.197
14 sd2011_clean_small_categorical      5 300    pmse     0.169
15 sd2011_clean_small_categorical      5 600    pmse     0.160
16 sd2011_clean_small_categorical      5 900    pmse     0.156
17 sd2011                              5 100    specks   0.881
18 sd2011                              5 300    specks   0.816
19 sd2011                              5 600    specks   0.779
20 sd2011                              5 900    specks   0.757
21 sd2011_clean                        5 100    specks   0.918
22 sd2011_clean                        5 300    specks   0.809
23 sd2011_clean                        5 600    specks   0.755
24 sd2011_clean                        5 900    specks   0.771
25 sd2011_clean_small                  5 100    specks   0.874
26 sd2011_clean_small                  5 300    specks   0.794
27 sd2011_clean_small                  5 600    specks   0.739
28 sd2011_clean_small                  5 900    specks   0.706
29 sd2011_clean_small_categorical      5 100    specks   0.880
30 sd2011_clean_small_categorical      5 300    specks   0.809
# ℹ 2 more rows
> 
> df_graph <- ggplot(df_comparison, aes(x = epochs, y = values)) +
+   geom_bar(stat="identity",position = position_dodge2()) +
+   facet_nested_wrap(data ~ utility, labeller = labeller(.rows = label_both), nrow = 4, scales = "free_y") +
+   # ylab("Kolmogorov-Smirnov (lower is better)") +
+   theme_bw() +
+   theme(panel.grid.minor = element_blank(), 
+         legend.position = "bottom",
+         legend.title = element_blank(),
+         legend.key.width=unit(1, "cm"),
+         # axis.text.x = element_text(angle = 90, hjust = 1),
+         axis.line.y = element_line(color="black", linewidth=.5),
+         axis.line.x = element_line(color="black", linewidth=.5)
+   )
> 
> df_graph
> 
> ggsave(plot = df_graph, paste0(graphs,"ctgan_fidelity_optimize_dataset.pdf"), height = 4, width = 6)
> 
> 
> # Graph (two-way) ----
> 
> df_plot <- read.csv(paste0(tables,"ctgan_fidelity_twoway_dataset.csv"))
> 
> data <- c("sd2011","sd2011_clean","sd2011_clean_small","sd2011_clean_small_categorical")
> for (d in data) {
+   df_plot_graph <- df_plot %>%
+     filter(data == d & epochs == 600) %>%
+     filter(copies == 5) 
+   
+   df_graph <- ggplot(df_plot_graph, aes(x = X2, y = X1, fill = val)) + 
+     geom_tile() +
+     scale_fill_gradient(low = "gray95", high = "red") +
+     xlab("") +
+     ylab("") +
+     theme_minimal() + 
+     theme(axis.text.x = element_text(size = 10, angle = 90, hjust = 0.9, vjust = 0.2), 
+           axis.text.y = element_text(size = 10, margin = margin(r = 0)),
+           title = element_text(size = 11),
+           legend.title = element_blank(),
+           panel.grid.major = element_blank(), 
+           panel.grid.minor = element_blank())
+   
+   ggsave(plot = df_graph, paste0(graphs,"ctgan_fidelity_twoway_",d,".pdf"), height = 4, width = 6)
+ }
> 
> df_graph
> 
> proc.time()
       User      System verstrichen 
    926.493       7.915     941.034 
