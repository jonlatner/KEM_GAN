
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R ist freie Software und kommt OHNE JEGLICHE GARANTIE.
Sie sind eingeladen, es unter bestimmten Bedingungen weiter zu verbreiten.
Tippen Sie 'license()' or 'licence()' für Details dazu.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Tippen Sie 'demo()' für einige Demos, 'help()' für on-line Hilfe, oder
'help.start()' für eine HTML Browserschnittstelle zur Hilfe.
Tippen Sie 'q()', um R zu verlassen.

> # Top commands ----
> 
> # Create empty R application (no figures, data frames, packages, etc.)
> # Get a list of all loaded packages
> packages <- search()[grepl("package:", search())]
> # Unload each package
> for (package in packages) {
+   unloadNamespace(package)
+ }
> 
> rm(list=ls(all=TRUE))
> 
> # load library
> library(synthpop)
Find out more at https://www.synthpop.org.uk/
> library(tidyverse)
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.2     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.0
✔ ggplot2   3.4.2     ✔ tibble    3.2.1
✔ lubridate 1.9.2     ✔ tidyr     1.3.0
✔ purrr     1.0.1     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(rpart)
> 
> # FOLDERS - ADAPT THIS PATHWAY
> main_dir = "/Users/jonathanlatner/Documents/GitHub/KEM_GAN/latner/data/benchmark/"
> 
> data_files = "data_files/"
> original_data = "data_files/original/"
> synthetic_data = "data_files/synthetic/synthpop/"
> duration = "duration/"
> 
> setwd(main_dir)
> 
> #functions
> options(scipen=999) 
> 
> # Create fake synthetic data with 1 copy (and time duration) ----
> 
> copies <- c(1)
> data <- c("adult","grid","gridr","sd2011_small","sd2011")
> data <- c("sd2011_duration_wo_missing","sd2011_duration_w_missing")
> data <- c("sd2011_bmi_large")
> for (d in data) {
+   print(d)
+   df_ods <- read.csv(paste0(original_data,d,".csv"))
+   df_ods[df_ods == ""] <- NA
+   df_ods[df_ods < 0] <- NA
+   df_ods <- df_ods %>%
+     mutate_if(is.character, as.factor)
+   
+   for (c in copies) {
+     
+     # start clock
+     time_start <- proc.time()
+     
+     df_synds <- syn(df_ods, m = c)
+     
+     # end clock
+     time_end <- proc.time()
+     time_duration <- as.numeric(time_end[1] - time_start[1])
+     
+     df_duration = data.frame(type="synthpop",
+                              data=d,
+                              duration=time_duration)
+     write.csv(df_duration, file = paste0(duration,"duration_synthpop_data_",d,".csv"), row.names = FALSE)
+     
+ 
+     # save RDS file for future use with synthpop package (i.e. utility measures)
+     saveRDS(df_synds, paste0(data_files,"synthetic/synds_",d,"_m_",c,".rds"))
+     
+     # save csv file
+     for (j in 1:c) {
+       synthpop_df <- df_synds$syn
+       write.csv(synthpop_df, file = paste0(synthetic_data,"sds_synthpop_",d,"_m_",c,"_n_",j,".csv"), row.names = FALSE)
+     }
+   }
+ }
[1] "sd2011_bmi_large"

Synthesis
-----------
 sex age agegr placesize region edu eduspec socprof unempdur income
 marital mmarr ymarr msepdiv ysepdiv ls depress trust trustfam trustneigh
 sport nofriend smoke nociga alcabuse alcsol workab wkabdur wkabint wkabintdur
 emcc englang height weight
> 
> # Create fake synthetic data with m copies ----
> # 
> # copies <- c(5)
> # for (d in data) {
> #   print(d)
> #   df_ods <- read.csv(paste0(original_data,d,".csv"))
> #   df_ods[df_ods == ""] <- NA
> #   df_ods[df_ods < 0] <- NA
> #   df_ods <- df_ods %>%
> #     mutate_if(is.character, as.factor)
> #   
> #   for (c in copies) {
> #     
> #     df_synds <- syn(df_ods, m = c)
> # 
> #     # save RDS file for future use with synthpop package (i.e. utility measures)
> #     saveRDS(df_synds, paste0(data_files,"synthetic/synds_",d,"_m_",c,".rds"))
> #     
> #     # save csv file
> #     for (j in 1:c) {
> #       synthpop_df <- df_synds$syn[j]
> #       write.csv(synthpop_df, file = paste0(synthetic_data,"sds_synthpop_",d,"_m_",c,"_n_",j,".csv"), row.names = FALSE)
> #     }
> #   }
> # }
> 
> 
> proc.time()
       User      System verstrichen 
   1685.697       0.540    1696.287 
