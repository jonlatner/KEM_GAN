# SuperFastPython.com
# execute tasks sequentially in a for loop
# https://superfastpython.com/multiprocessing-for-loop/
# SuperFastPython.com
# execute tasks in parallel in a for loop
from time import sleep
from random import random
from multiprocessing import Process
import time
start_time = time.time()
# execute a task
def task(arg):
# generate a random value between 0 and 1
value = random()
# block for a fraction of a second
sleep(value)
# report a message
print(f'.done {arg}, generated {value}', flush=True)
# protect the entry point
if __name__ == '__main__':
# create all tasks
processes = [Process(target=task, args=(i,)) for i in range(20)]
# start all processes
for process in processes:
process.start()
# wait for all processes to complete
for process in processes:
process.join()
# report that all tasks are completed
print('Done', flush=True)
end_time = time.time()
print(round(end_time - start_time,2))
# SuperFastPython.com
# execute tasks sequentially in a for loop
# https://superfastpython.com/multiprocessing-for-loop/
# SuperFastPython.com
# execute tasks in parallel in a for loop
from time import sleep
from random import random
from multiprocessing import Process
import time
start_time = time.time()
# execute a task
def task(arg):
# generate a random value between 0 and 1
value = random()
# block for a fraction of a second
sleep(value)
# report a message
print(f'.done {arg}, generated {value}', flush=True)
# protect the entry point
if __name__ == '__main__':
# create all tasks
processes = [Process(target=task, args=(i,)) for i in range(20)]
# start all processes
for process in processes:
process.start()
# wait for all processes to complete
for process in processes:
process.join()
# report that all tasks are completed
print('Done', flush=True)
end_time = time.time()
print(round(end_time - start_time,2))
library(tidyverse)
options(scipen=999)
df <- read_excel(paste0("/Users/jonathanlatner/Downloads/Task Ratings.xlsx"),sep = ";")
library(readxl)
df <- read_excel(paste0("/Users/jonathanlatner/Downloads/Task Ratings.xlsx"),sep = ";")
df <- read_excel(paste0("/Users/jonathanlatner/Downloads/Task Ratings.xlsx"))
df
View(df)
reticulate::repl_python()
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
install.packages("brms")
install.packages("brms",dependencies = TRUE)
install.packages("rstan",dependencies = TRUE)
library(rstan)
example(stan_model, package = "rstan", run.dontrun = TRUE)
# Detach if loaded
if ("bayesintro" %in% (.packages())) {
detach(package:bayesintro, unload = TRUE)
}
# Uninstall if installed
if ("bayesintro" %in% installed.packages()) {
remove.packages("bayesintro")
}
# Install if not installed
if (!("devtools" %in% installed.packages())) {
install.packages("devtools")
}
# Load from GitHub
library(devtools)
devtools::install_github("denis-cohen/bayesintro")
# Load to library
library(bayesintro)
learnr::run_tutorial("00-00-int", package = "bayesintro")
learnr::run_tutorial("01-01-lec", package = "bayesintro")
# Load to library
library(bayesintro)
# Run tutorials (one at a time)
# learnr::run_tutorial("00-00-int", package = "bayesintro")
# learnr::run_tutorial("01-01-lec", package = "bayesintro")
# learnr::run_tutorial("01-02-lec", package = "bayesintro")
learnr::run_tutorial("01-03-lab", package = "bayesintro")
# Run tutorials (one at a time)
# learnr::run_tutorial("00-00-int", package = "bayesintro")
# learnr::run_tutorial("01-01-lec", package = "bayesintro")
# learnr::run_tutorial("01-02-lec", package = "bayesintro")
learnr::run_tutorial("01-03-lab", package = "bayesintro")
library(bayesintro)
# Run tutorials (one at a time)
# learnr::run_tutorial("00-00-int", package = "bayesintro")
# learnr::run_tutorial("01-01-lec", package = "bayesintro")
# learnr::run_tutorial("01-02-lec", package = "bayesintro")
learnr::run_tutorial("01-03-lab", package = "bayesintro")
library(synthpop)
ods <- SD2011
ods
str(ods)
vars <- c("sex", "age", "edu", "marital", "income", "ls", "wkabint")
ods <- SD2011[, vars]
str(ods)
str(ods)
ods <- SD2011
summary(ods)
exp(.1)
update
library(installr)
# Top commands ----
# Create empty R application (no figures, data frames, packages, etc.)
# Get a list of all loaded packages
packages <- search()[grepl("package:", search())]
# Unload each package
for (package in packages) {
unloadNamespace(package)
}
rm(list=ls(all=TRUE))
# load library
library(tidyverse)
library(synthpop)
library(xtable)
# FOLDERS - ADAPT THIS PATHWAY
main_dir = "/Users/jonathanlatner/Documents/GitHub/KEM_GAN/latner/projects/comparison/"
data_files = "data_files/"
original_data = "data_files/original/"
synthetic_data = "data_files/synthetic/"
graphs = "graphs/"
tables = "tables/"
duration = "duration/analyze/"
setwd(main_dir)
# CTGAN/datasynthesizer ----
data <- c("sd2011_v00","sd2011_v01","sd2011_v02","sd2011_v03","sd2011_v04","sd2011_v05","sd2011_v06",
"sd2011_v08_1_20","sd2011_v08_2_20","sd2011_v08_3_20",
"sd2011_v08_1_25","sd2011_v08_2_25","sd2011_v08_3_25",
"sd2011_v08_1_30","sd2011_v08_2_30","sd2011_v08_3_30")
sdg <- c("ctgan","datasynthesizer","synthpop")
df_duration <- data.frame()
for (d in data) {
for (s in sdg) {
data <- read.csv(paste0(duration,"duration_",s,"_",d,".csv")) %>%
rename(sdg=type)
df_duration <- rbind(df_duration,data)
}
}
# combine ----
df_duration %>%
arrange(data,sdg)
df_duration
# clean ----
# rotate
df_wide <- df_duration %>%
pivot_wider(names_from = "sdg",values_from = "duration") %>%
rename(version=data)
df_wide$version <- gsub("sd2011_", "", df_wide$version)
df_wide
df_wide$description <- c("Raw (SD2011)",
"Without eduspec or wkabdur",
"Without wkabdur",
"Without eduspec",
"Last variables: eduspec-wkabdur",
"Last variables: wkabdur-eduspec",
"as.numeric(wkabdur) and last variable: eduspec",
"+ 1 variable (20 values)",
"+ 2 variable (20 values)",
"+ 3 variable (20 values)",
"+ 1 variable (25 values)",
"+ 2 variable (25 values)",
"+ 3 variable (25 values)",
"+ 1 variable (30 values)",
"+ 2 variable (30 values)",
"+ 3 variable (30 values)"
)
df_wide <- df_wide %>%
select(version, description, everything())
df_wide
# table ----
# Print the data frame as a LaTeX table using xtable
latex_table <- xtable(df_wide)
latex_table$description <- gsub("_", "\\_", latex_table$description)
print.xtable(latex_table,
include.rownames = FALSE,
floating = FALSE,
booktabs = TRUE,
file = paste0(tables,"table_sd2011_duration_v2.tex"))
# Top commands ----
# Create empty R application (no figures, data frames, packages, etc.)
# Get a list of all loaded packages
packages <- search()[grepl("package:", search())]
# Unload each package
for (package in packages) {
unloadNamespace(package)
}
rm(list=ls(all=TRUE))
# load library
library(tidyverse)
library(synthpop)
library(xtable)
# FOLDERS - ADAPT THIS PATHWAY
main_dir = "/Users/jonathanlatner/Documents/GitHub/KEM_GAN/latner/projects/comparison/"
data_files = "data_files/"
original_data = "data_files/original/"
synthetic_data = "data_files/synthetic/"
graphs = "graphs/"
tables = "tables/"
duration = "duration/analyze/"
setwd(main_dir)
# CTGAN/datasynthesizer ----
data <- c("sd2011_v00","sd2011_v01","sd2011_v02","sd2011_v03","sd2011_v04","sd2011_v05","sd2011_v06")
sdg <- c("ctgan","datasynthesizer","synthpop","synthpop_package")
df_duration <- data.frame()
for (d in data) {
for (s in sdg) {
data <- read.csv(paste0(duration,"duration_",s,"_",d,".csv")) %>%
rename(sdg=type)
df_duration <- rbind(df_duration,data)
}
}
data <- c("sd2011_v08_1_20","sd2011_v08_2_20","sd2011_v08_3_20",
"sd2011_v08_1_25","sd2011_v08_2_25","sd2011_v08_3_25",
"sd2011_v08_1_30","sd2011_v08_2_30","sd2011_v08_3_30")
sdg <- c("ctgan","datasynthesizer","synthpop","synthpop_package")
for (d in data) {
for (s in sdg) {
data <- read.csv(paste0(duration,"duration_",s,"_",d,".csv")) %>%
rename(sdg=type)
df_duration <- rbind(df_duration,data)
}
}
# Top commands ----
# Create empty R application (no figures, data frames, packages, etc.)
# Get a list of all loaded packages
packages <- search()[grepl("package:", search())]
# Unload each package
for (package in packages) {
unloadNamespace(package)
}
rm(list=ls(all=TRUE))
# load library
library(tidyverse)
library(synthpop)
library(xtable)
# FOLDERS - ADAPT THIS PATHWAY
main_dir = "/Users/jonathanlatner/Documents/GitHub/KEM_GAN/latner/projects/comparison/"
data_files = "data_files/"
original_data = "data_files/original/"
synthetic_data = "data_files/synthetic/"
graphs = "graphs/"
tables = "tables/"
duration = "duration/analyze/"
setwd(main_dir)
# CTGAN/datasynthesizer ----
data <- c("sd2011_v00","sd2011_v01","sd2011_v02","sd2011_v03","sd2011_v04","sd2011_v05","sd2011_v06")
sdg <- c("ctgan","datasynthesizer","synthpop","synthpop_package")
df_duration <- data.frame()
for (d in data) {
for (s in sdg) {
data <- read.csv(paste0(duration,"duration_",s,"_",d,".csv")) %>%
rename(sdg=type)
df_duration <- rbind(df_duration,data)
}
}
data <- c("sd2011_v08_1_20","sd2011_v08_2_20","sd2011_v08_3_20",
"sd2011_v08_1_25","sd2011_v08_2_25","sd2011_v08_3_25",
"sd2011_v08_1_30","sd2011_v08_2_30","sd2011_v08_3_30")
sdg <- c("ctgan","datasynthesizer","synthpop")
for (d in data) {
for (s in sdg) {
data <- read.csv(paste0(duration,"duration_",s,"_",d,".csv")) %>%
rename(sdg=type)
df_duration <- rbind(df_duration,data)
}
}
# combine ----
df_duration %>%
arrange(data,sdg)
df_duration
# clean ----
# rotate
df_wide <- df_duration %>%
pivot_wider(names_from = "sdg",values_from = "duration") %>%
rename(version=data)
df_wide$version <- gsub("sd2011_", "", df_wide$version)
df_wide
df_wide$description <- c("Raw (SD2011)",
"Without eduspec or wkabdur",
"Without wkabdur",
"Without eduspec",
"Last variables: eduspec-wkabdur",
"Last variables: wkabdur-eduspec",
"as.numeric(wkabdur) and last variable: eduspec",
"+ 1 variable (20 values)",
"+ 2 variable (20 values)",
"+ 3 variable (20 values)",
"+ 1 variable (25 values)",
"+ 2 variable (25 values)",
"+ 3 variable (25 values)",
"+ 1 variable (30 values)",
"+ 2 variable (30 values)",
"+ 3 variable (30 values)"
)
df_wide <- df_wide %>%
select(version, description, everything())
df_wide
# table ----
# Print the data frame as a LaTeX table using xtable
latex_table <- xtable(df_wide)
latex_table$description <- gsub("_", "\\_", latex_table$description)
print.xtable(latex_table,
include.rownames = FALSE,
floating = FALSE,
booktabs = TRUE,
file = paste0(tables,"table_sd2011_duration_v2.tex"))
# Top commands ----
# Create empty R application (no figures, data frames, packages, etc.)
# Get a list of all loaded packages
packages <- search()[grepl("package:", search())]
# Unload each package
for (package in packages) {
unloadNamespace(package)
}
rm(list=ls(all=TRUE))
# load library
library(tidyverse)
library(synthpop)
library(xtable)
# FOLDERS - ADAPT THIS PATHWAY
main_dir = "/Users/jonathanlatner/Documents/GitHub/KEM_GAN/latner/projects/comparison/"
data_files = "data_files/"
original_data = "data_files/original/"
synthetic_data = "data_files/synthetic/"
graphs = "graphs/"
tables = "tables/"
duration = "duration/analyze/"
setwd(main_dir)
# CTGAN/datasynthesizer ----
data <- c("sd2011_v00","sd2011_v01","sd2011_v02","sd2011_v03","sd2011_v04","sd2011_v05","sd2011_v06")
sdg <- c("ctgan","datasynthesizer","synthpop","synthpop_package")
df_duration <- data.frame()
for (d in data) {
for (s in sdg) {
data <- read.csv(paste0(duration,"duration_",s,"_",d,".csv")) %>%
rename(sdg=type)
df_duration <- rbind(df_duration,data)
}
}
data <- c("sd2011_v08_1_20","sd2011_v08_2_20","sd2011_v08_3_20",
"sd2011_v08_1_25","sd2011_v08_2_25","sd2011_v08_3_25",
"sd2011_v08_1_30","sd2011_v08_2_30","sd2011_v08_3_30")
sdg <- c("ctgan","datasynthesizer","synthpop")
for (d in data) {
for (s in sdg) {
data <- read.csv(paste0(duration,"duration_",s,"_",d,".csv")) %>%
rename(sdg=type)
df_duration <- rbind(df_duration,data)
}
}
# combine ----
df_duration %>%
arrange(data,sdg)
df_duration
# clean ----
# rotate
df_wide <- df_duration %>%
pivot_wider(names_from = "sdg",values_from = "duration") %>%
rename(version=data) %>%
arrange(version)
df_wide$version <- gsub("sd2011_", "", df_wide$version)
df_wide
# Top commands ----
# Create empty R application (no figures, data frames, packages, etc.)
# Get a list of all loaded packages
packages <- search()[grepl("package:", search())]
# Unload each package
for (package in packages) {
unloadNamespace(package)
}
rm(list=ls(all=TRUE))
# load library
library(tidyverse)
library(synthpop)
library(xtable)
# FOLDERS - ADAPT THIS PATHWAY
main_dir = "/Users/jonathanlatner/Documents/GitHub/KEM_GAN/latner/projects/comparison/"
data_files = "data_files/"
original_data = "data_files/original/"
synthetic_data = "data_files/synthetic/"
graphs = "graphs/"
tables = "tables/"
duration = "duration/analyze/"
setwd(main_dir)
# CTGAN/datasynthesizer ----
data <- c("sd2011_v00","sd2011_v01","sd2011_v02","sd2011_v03","sd2011_v04","sd2011_v05","sd2011_v06")
sdg <- c("ctgan","datasynthesizer","synthpop","synthpop_package")
df_duration <- data.frame()
for (d in data) {
for (s in sdg) {
data <- read.csv(paste0(duration,"duration_",s,"_",d,".csv")) %>%
rename(sdg=type)
df_duration <- rbind(df_duration,data)
}
}
data <- c("sd2011_v08_1_20","sd2011_v08_2_20","sd2011_v08_3_20",
"sd2011_v08_1_25","sd2011_v08_2_25","sd2011_v08_3_25",
"sd2011_v08_1_30","sd2011_v08_2_30","sd2011_v08_3_30")
sdg <- c("ctgan","datasynthesizer","synthpop")
for (d in data) {
for (s in sdg) {
data <- read.csv(paste0(duration,"duration_",s,"_",d,".csv")) %>%
rename(sdg=type)
df_duration <- rbind(df_duration,data)
}
}
# combine ----
df_duration %>%
arrange(data,sdg)
df_duration
# clean ----
# rotate
df_wide <- df_duration %>%
pivot_wider(names_from = "sdg",values_from = "duration") %>%
rename(version=data) %>%
arrange(version)
df_wide$version <- gsub("sd2011_", "", df_wide$version)
df_wide
df_wide$description <- c("Raw (SD2011)",
"Without eduspec or wkabdur",
"Without wkabdur",
"Without eduspec",
"Last variables: eduspec-wkabdur",
"Last variables: wkabdur-eduspec",
"as.numeric(wkabdur) and last variable: eduspec",
"+ 1 variable (20 values)",
"+ 1 variable (25 values)",
"+ 1 variable (30 values)",
"+ 2 variable (20 values)",
"+ 2 variable (25 values)",
"+ 2 variable (30 values)",
"+ 3 variable (20 values)",
"+ 3 variable (25 values)",
"+ 3 variable (30 values)"
)
df_wide <- df_wide %>%
select(version, description, everything())
df_wide
# table ----
# Print the data frame as a LaTeX table using xtable
latex_table <- xtable(df_wide)
latex_table$description <- gsub("_", "\\_", latex_table$description)
print.xtable(latex_table,
include.rownames = FALSE,
floating = FALSE,
booktabs = TRUE,
file = paste0(tables,"table_sd2011_duration_v2.tex"))
