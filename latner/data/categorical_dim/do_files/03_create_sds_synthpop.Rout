
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R ist freie Software und kommt OHNE JEGLICHE GARANTIE.
Sie sind eingeladen, es unter bestimmten Bedingungen weiter zu verbreiten.
Tippen Sie 'license()' or 'licence()' für Details dazu.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Tippen Sie 'demo()' für einige Demos, 'help()' für on-line Hilfe, oder
'help.start()' für eine HTML Browserschnittstelle zur Hilfe.
Tippen Sie 'q()', um R zu verlassen.

> # Top commands ----
> # Create empty R application (no figures, data frames, packages, etc.)
> # Get a list of all loaded packages
> packages <- search()[grepl("package:", search())]
> # Unload each package
> for (package in packages) {
+   unloadNamespace(package)
+ }
> 
> rm(list=ls(all=TRUE))
> 
> # load library
> library(tidyverse)
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ dplyr     1.1.2     ✔ readr     2.1.4
✔ forcats   1.0.0     ✔ stringr   1.5.0
✔ ggplot2   3.4.2     ✔ tibble    3.2.1
✔ lubridate 1.9.2     ✔ tidyr     1.3.0
✔ purrr     1.0.1     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(synthpop)
Find out more at https://www.synthpop.org.uk/
> 
> # FOLDERS - ADAPT THIS PATHWAY
> main_dir = "/Users/jonathanlatner/Documents/GitHub/IAB/simulation_data/categorical_dim/"
> 
> data_files = "data_files/"
> original_data = "data_files/original/"
> synthetic_data = "data_files/synthetic/synthpop/"
> duration = "duration/"
> 
> setwd(main_dir)
> 
> 
> # Synthesize data grid ----
> 
> # Dimensions
> rows = c(1000, 5000) # Rows/observations
> cols = c(20) # Columns/variables
> vals = c(5,10,15,20)  # Number of possible options for each character
> 
> my.seed = 1230
> 
> df_duration <- data.frame(
+   type = as.character(),
+   rows = as.numeric(),
+   cols = as.numeric(),
+   vals = as.numeric(),
+   n = as.numeric(),
+   duration = as.numeric()
+ )
> 
> for (r in rows) {
+   for (c in cols) {
+     for (v in vals) {
+       
+       print(paste(r, c, v,sep = ","))
+       
+       df_ods <- read.csv(paste0(original_data,"ods_rows_",r,"_cols_",c,"_vals_",v,".csv"))
+       my.seed <- my.seed + 1
+       
+       time_start <- proc.time()
+       
+       sds.default <- syn(df_ods,
+                          m = 1,
+                          seed = my.seed)
+       
+       time_end <- proc.time()
+       
+       time_duration <- as.numeric(time_end[1] - time_start[1])
+       
+       output = data.frame(type="synthpop",
+                           rows=r,
+                           cols=c,
+                           vals=v,
+                           n=1,
+                           duration=time_duration)
+       df_duration <- rbind(df_duration,output)
+       
+       synthpop_df <- sds.default$syn
+       write.csv(synthpop_df, file = paste0(synthetic_data,"sds_synthpop_rows_",r,"_cols_",c,"_vals_",v,"_n_1.csv"), row.names = FALSE)
+ 
+     }
+   }
+ }
[1] "1000,20,5"

Variable(s): var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16, var_17, var_18, var_19, var_20 have been changed for synthesis from character to factor.

Synthesis
-----------
 var_1 var_2 var_3 var_4 var_5 var_6 var_7 var_8 var_9 var_10
 var_11 var_12 var_13 var_14 var_15 var_16 var_17 var_18 var_19 var_20

[1] "1000,20,10"

Variable(s): var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16, var_17, var_18, var_19, var_20 have been changed for synthesis from character to factor.

Synthesis
-----------
 var_1 var_2 var_3 var_4 var_5 var_6 var_7 var_8 var_9 var_10
 var_11 var_12 var_13 var_14 var_15 var_16 var_17 var_18 var_19 var_20

[1] "1000,20,15"

Variable(s): var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16, var_17, var_18, var_19, var_20 have been changed for synthesis from character to factor.

Synthesis
-----------
 var_1 var_2 var_3 var_4 var_5 var_6 var_7 var_8 var_9 var_10
 var_11 var_12 var_13 var_14 var_15 var_16 var_17 var_18 var_19 var_20

[1] "1000,20,20"

Variable(s): var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16, var_17, var_18, var_19, var_20 have been changed for synthesis from character to factor.

Synthesis
-----------
 var_1 var_2 var_3 var_4 var_5 var_6 var_7 var_8 var_9 var_10
 var_11 var_12 var_13 var_14 var_15 var_16 var_17 var_18 var_19 var_20

[1] "5000,20,5"

Variable(s): var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16, var_17, var_18, var_19, var_20 have been changed for synthesis from character to factor.

Synthesis
-----------
 var_1 var_2 var_3 var_4 var_5 var_6 var_7 var_8 var_9 var_10
 var_11 var_12 var_13 var_14 var_15 var_16 var_17 var_18 var_19 var_20

[1] "5000,20,10"

Variable(s): var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16, var_17, var_18, var_19, var_20 have been changed for synthesis from character to factor.

Synthesis
-----------
 var_1 var_2 var_3 var_4 var_5 var_6 var_7 var_8 var_9 var_10
 var_11 var_12 var_13 var_14 var_15 var_16 var_17 var_18 var_19 var_20

[1] "5000,20,15"

Variable(s): var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16, var_17, var_18, var_19, var_20 have been changed for synthesis from character to factor.

Synthesis
-----------
 var_1 var_2 var_3 var_4 var_5 var_6 var_7 var_8 var_9 var_10
 var_11 var_12 var_13 var_14 var_15 var_16 var_17 var_18 var_19 var_20

[1] "5000,20,20"

Variable(s): var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16, var_17, var_18, var_19, var_20 have been changed for synthesis from character to factor.

Synthesis
-----------
 var_1 var_2 var_3 var_4 var_5 var_6 var_7 var_8 var_9 var_10
 var_11 var_12 var_13 var_14 var_15 var_16 var_17 var_18 var_19 var_20

> 
> write.csv(df_duration, file = paste0(duration,"duration_synthpop.csv"), row.names = FALSE)
> 
> df_duration
      type rows cols vals n duration
1 synthpop 1000   20    5 1    0.375
2 synthpop 1000   20   10 1    1.703
3 synthpop 1000   20   15 1   42.083
4 synthpop 1000   20   20 1 1281.498
5 synthpop 5000   20    5 1    2.076
6 synthpop 5000   20   10 1    7.241
7 synthpop 5000   20   15 1  160.296
8 synthpop 5000   20   20 1 4850.827
> 
> 
> proc.time()
       User      System verstrichen 
   6347.146      14.748    6362.493 
